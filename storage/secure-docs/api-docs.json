{
    "openapi": "3.0.0",
    "info": {
        "title": "Readymarket API RESTful",
        "description": "Complete REST API for Microsoft products marketplace. Includes products management, categories, users, MITEC payment processing, analytics, shopping cart and advanced authentication system.<br><br><strong>Developed by:</strong> Salvador Arturo Rodriguez Loera",
        "contact": {
            "name": "salvador.rodriguez@readymind.ms",
            "email": "salvador.rodriguez@readymind.ms"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Development server"
        },
        {
            "url": "https://readymarket-backend.readymind.mx",
            "description": "Production server"
        }
    ],
    "paths": {
        "/api/v1/activities": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "List all activities",
                "description": "Gets a paginated list of all activities",
                "operationId": "9d2aaca28896a8ed26f4994a358e35ff",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search by name or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "include_deleted",
                        "in": "query",
                        "description": "Include deleted activities (soft delete)",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activities list retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activities retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Activity"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Create new activity",
                "description": "Creates a new activity in the catalog",
                "operationId": "f4d5f498348c9c03d051739d6ce3c08c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Activity name",
                                        "type": "string",
                                        "maxLength": 180,
                                        "example": "New purchase"
                                    },
                                    "description": {
                                        "description": "Activity description",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "performs a new purchase"
                                    },
                                    "icon": {
                                        "description": "FontAwesome icon class",
                                        "type": "string",
                                        "maxLength": 45,
                                        "example": "fa-shopping-cart"
                                    },
                                    "active": {
                                        "description": "Active status",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Activity created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Activity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/activities/{id}": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Get specific activity",
                "description": "Gets the details of a specific activity by its ID",
                "operationId": "0e9be61b28d7696af473efbe39af1f1c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Activity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Activities"
                ],
                "summary": "Update activity",
                "description": "Updates an existing activity",
                "operationId": "9ee79a30106f9939acf271a9ec4f5db2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "description": "Activity name",
                                        "type": "string",
                                        "maxLength": 180
                                    },
                                    "description": {
                                        "description": "Activity description",
                                        "type": "string",
                                        "maxLength": 1000
                                    },
                                    "icon": {
                                        "description": "FontAwesome icon class",
                                        "type": "string",
                                        "maxLength": 45
                                    },
                                    "active": {
                                        "description": "Active status",
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Activity updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Activity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Activities"
                ],
                "summary": "Delete activity (soft delete)",
                "description": "Deletes an activity using soft delete",
                "operationId": "7a28eb2a3ace44556263bb274c3081cc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/activities/{id}/force": {
            "delete": {
                "tags": [
                    "Activities"
                ],
                "summary": "Delete activity permanently",
                "description": "Permanently deletes an activity from the database",
                "operationId": "f90f46829243b69256606b7edb101975",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity permanently deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity permanently deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/activities/{id}/restore": {
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Restore deleted activity",
                "description": "Restores an activity that was soft deleted",
                "operationId": "00244ce9a909f6cc3ca36860cb149001",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity restored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Activity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/activities/{id}/toggle-status": {
            "post": {
                "tags": [
                    "Activities"
                ],
                "summary": "Toggle activity status",
                "description": "Activates or deactivates an activity",
                "operationId": "daf086460557c48e546f4783d7fb8071",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Activity ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Activity status toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity status toggled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Activity"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/activities/active": {
            "get": {
                "tags": [
                    "Activities"
                ],
                "summary": "Get only active activities",
                "description": "Gets a list of all active activities",
                "operationId": "bcb44c7c39605a8e6c3dee11774a7011",
                "responses": {
                    "200": {
                        "description": "Active activities retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active activities retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Activity"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/analytics/dashboard": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get dashboard analytics",
                "description": "Returns analytics data for the admin dashboard",
                "operationId": "05d184da4e8c54be2eb7790119b8767e",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dashboard analytics retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analytics/stores": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get stores analytics",
                "description": "Returns analytics data for stores",
                "operationId": "cc693fcd8a7822cf9bb920ffb240937a",
                "responses": {
                    "200": {
                        "description": "Stores analytics retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analytics/products/top": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get top products analytics",
                "description": "Returns top products by various metrics",
                "operationId": "84a1c2df41f2ba6ae002c660a342d817",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of products to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Top products retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analytics/categories/performance": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get categories performance",
                "description": "Returns performance metrics for categories",
                "operationId": "69cbe77048d61fd90bef1250b2ef4512",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Categories performance retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analytics/pricing": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get pricing analytics",
                "description": "Returns pricing analytics and distribution",
                "operationId": "fe9ff7999afb24fe52db1e18115b2a63",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pricing analytics retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analytics/system/health": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get system health",
                "description": "Returns system health and integrity checks",
                "operationId": "903bc35a34fae42b7d2196c03e67d364",
                "responses": {
                    "200": {
                        "description": "System health retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analytics/abandoned-carts-simple": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get simple abandoned carts list",
                "description": "Returns simple list of non-converted carts",
                "operationId": "f1d11b7f2d43501b5e019c9b39b53d48",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "hours",
                        "in": "query",
                        "description": "Hours of inactivity to consider abandoned",
                        "schema": {
                            "type": "integer",
                            "default": 24
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Abandoned carts retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analytics/track-page-view": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Track page view",
                "description": "Records a detailed page view for analytics",
                "operationId": "09576a639bce26dc703be13c00082f96",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "page_type": {
                                        "description": "Type of page",
                                        "type": "string",
                                        "example": "product"
                                    },
                                    "page_url": {
                                        "description": "Full URL",
                                        "type": "string",
                                        "example": "/product/123"
                                    },
                                    "page_path": {
                                        "description": "Path without params",
                                        "type": "string",
                                        "example": "/product"
                                    },
                                    "page_name": {
                                        "description": "Vue route name",
                                        "type": "string",
                                        "example": "product-details"
                                    },
                                    "resource_id": {
                                        "description": "Universal resource ID (product, category, etc.)",
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "referrer_url": {
                                        "description": "Referrer URL",
                                        "type": "string",
                                        "example": "https://google.com"
                                    },
                                    "utm_source": {
                                        "description": "UTM source",
                                        "type": "string",
                                        "example": "google"
                                    },
                                    "additional_data": {
                                        "description": "Additional custom data",
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Page view tracked successfully"
                    }
                }
            }
        },
        "/api/v1/analytics/page-views": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get page views analytics",
                "description": "Returns detailed page views analytics data",
                "operationId": "1829e4ac7e28ed77a02c1660144acb50",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_type",
                        "in": "query",
                        "description": "Filter by page type",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days to analyze (default: 7)",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page views retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/analytics/track-cart-abandonment": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Track cart abandonment",
                "description": "Records cart abandonment for analytics",
                "operationId": "a008c5f4234ae0ec919bd1a00fb44c1f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cart_token": {
                                        "description": "Cart token",
                                        "type": "string",
                                        "example": "abc123"
                                    },
                                    "store_id": {
                                        "description": "Store ID",
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cart abandonment tracked successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analytics/abandoned-carts": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get abandoned carts",
                "description": "Returns detailed abandoned carts data",
                "operationId": "8b9cbb4b361ac9741dcea8fd7ef66889",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Abandoned carts retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/analytics/mark-abandoned-carts": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Mark old carts as abandoned",
                "description": "Marks carts as abandoned after specified hours of inactivity",
                "operationId": "3b436f4e7b7c006effcca94db500a42e",
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "hours": {
                                        "description": "Hours of inactivity",
                                        "type": "integer",
                                        "example": 24
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Carts marked as abandoned successfully"
                    }
                }
            }
        },
        "/api/v1/analytics/track-search": {
            "post": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Track a search query",
                "description": "Records a search query with its results count and metadata",
                "operationId": "2d43d938b31520d501b7fc9d9472b468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "search_term",
                                    "total_results"
                                ],
                                "properties": {
                                    "search_term": {
                                        "description": "The search term used",
                                        "type": "string"
                                    },
                                    "total_results": {
                                        "description": "Number of results found",
                                        "type": "integer"
                                    },
                                    "session_id": {
                                        "description": "User session ID",
                                        "type": "string"
                                    },
                                    "store_id": {
                                        "description": "Store ID if applicable",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Search tracked successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register new user",
                "description": "Register a new user account",
                "operationId": "fb835c97347e657e2a627790c4c5817a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and return access token",
                "operationId": "fb66b153966d9fac2e999136ef0ade67",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Revoke user access token",
                "operationId": "307ed0512855922b2280792376bb2095",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated user",
                "description": "Get current authenticated user information",
                "operationId": "5389aaa95512ef0b6ec88f262ecee7f0",
                "responses": {
                    "200": {
                        "description": "User information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change user password",
                "description": "Change current user password",
                "operationId": "73e7fe87ae608fb56115234032e979f2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/auth/verify-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email with OTP",
                "description": "Verify user email with OTP code",
                "operationId": "5700f9cfbd07061ae7f341abcfd1afca",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully"
                    }
                }
            }
        },
        "/api/v1/auth/resend-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend verification code",
                "description": "Resend OTP verification code to email",
                "operationId": "59ccc66366ffdc78d60a65a2a03be925",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification code sent"
                    }
                }
            }
        },
        "/api/v1/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset email",
                "description": "Send password reset link to user email",
                "operationId": "6e1075f86c4e9bf1030edadbf4480939",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent"
                    }
                }
            }
        },
        "/api/v1/auth/validate-reset-token": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Validate password reset token",
                "description": "Validate password reset token and get user info",
                "operationId": "d56bdfb142cbe37c3b36713b78588b7a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "token": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token is valid"
                    }
                }
            }
        },
        "/api/v1/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset password",
                "description": "Reset user password using token",
                "operationId": "1023bcce0b2950ff7518d34a1bdfacdb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "token": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful"
                    }
                }
            }
        },
        "/api/v1/auth/verify-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify OTP code",
                "description": "Verify user account using OTP code",
                "operationId": "5e165fafe50cc4b90de270165490edc6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp_code"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "otp_code": {
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid or expired OTP"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/v1/auth/resend-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend OTP code",
                "description": "Resend OTP verification code to user",
                "operationId": "140cadc81cfbc48f8b5557271c363296",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP resent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Too many requests"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/v1/billing-information": {
            "get": {
                "tags": [
                    "Billing Information"
                ],
                "summary": "Get user's billing information",
                "description": "Returns list of billing information for the authenticated user",
                "operationId": "8c91353cf9dcd7e481ad6af4efcd1da5",
                "parameters": [
                    {
                        "name": "include_inactive",
                        "in": "query",
                        "description": "Include inactive billing information",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "with_trashed",
                        "in": "query",
                        "description": "Include soft deleted billing information",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Billing information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Billing information retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BillingInformation"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Billing Information"
                ],
                "summary": "Create new billing information",
                "description": "Creates a new billing information record for the authenticated user",
                "operationId": "fb8e409f69946314cec2a4c0a7379faf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBillingInformationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Billing information created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Billing information created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BillingInformation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/billing-information/{id}": {
            "get": {
                "tags": [
                    "Billing Information"
                ],
                "summary": "Get specific billing information",
                "description": "Returns a specific billing information record for the authenticated user",
                "operationId": "3d812731bca83261f3d51c4ea53eec74",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Billing Information ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Billing information retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Billing information retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BillingInformation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Billing information not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Billing Information"
                ],
                "summary": "Update billing information",
                "description": "Updates an existing billing information record for the authenticated user",
                "operationId": "dcdd7c278b7202ba44a2264c6176ac2e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Billing Information ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBillingInformationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Billing information updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Billing information updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BillingInformation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Billing information not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Billing Information"
                ],
                "summary": "Soft delete billing information",
                "description": "Soft deletes a billing information record (can be restored later)",
                "operationId": "2428fed5f4d73b973146e3e7d1a7601e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Billing Information ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Billing information soft deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Billing information deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Billing information not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/billing-information/{id}/force": {
            "delete": {
                "tags": [
                    "Billing Information"
                ],
                "summary": "Permanently delete billing information",
                "description": "Permanently deletes a billing information record from the database",
                "operationId": "a676229a97616f63a397081a39dc1c80",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Billing Information ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Billing information permanently deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Billing information permanently deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Billing information not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/billing-information/{id}/restore": {
            "post": {
                "tags": [
                    "Billing Information"
                ],
                "summary": "Restore soft deleted billing information",
                "description": "Restores a billing information record that was soft deleted",
                "operationId": "dbf06c537062159121dbb144b41b22b6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Billing Information ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Billing information restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Billing information restored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BillingInformation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Billing information not found"
                    },
                    "400": {
                        "description": "Billing information is not deleted"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/billing-information/{id}/set-default": {
            "post": {
                "tags": [
                    "Billing Information"
                ],
                "summary": "Set billing information as default",
                "description": "Sets a billing information record as the default for the authenticated user",
                "operationId": "14c67f922155f38e399280adb6227471",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Billing Information ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Billing information set as default successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Billing information set as default successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/BillingInformation"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Billing information not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/cart": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Get current cart",
                "description": "Get the current user's cart or session cart if not authenticated",
                "operationId": "44b0d4a3390de7bb1866207fc1f92eac",
                "parameters": [
                    {
                        "name": "X-Cart-Token",
                        "in": "header",
                        "description": "Cart token for guest users",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Cart retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Cart"
                                        },
                                        "stats": {
                                            "properties": {
                                                "subtotal": {
                                                    "type": "string",
                                                    "example": "99.99"
                                                },
                                                "tax_amount": {
                                                    "type": "string",
                                                    "example": "15.99"
                                                },
                                                "total_amount": {
                                                    "type": "string",
                                                    "example": "115.98"
                                                },
                                                "items_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "unique_products": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "cart_token": {
                                                    "type": "string",
                                                    "example": "abc123def456"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cart/items": {
            "post": {
                "tags": [
                    "Cart"
                ],
                "summary": "Add item to cart",
                "description": "Add a product to the shopping cart",
                "operationId": "74026a355fc7660c73027713706dce92",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddToCartRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Item added to cart successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Producto agregado al carrito"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CartItem"
                                        },
                                        "cart_stats": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Los datos proporcionados no son válidos"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cart/items/{item}": {
            "put": {
                "tags": [
                    "Cart"
                ],
                "summary": "Update cart item",
                "description": "Update quantity or metadata of a cart item",
                "operationId": "143fccde398bfa42750d7f2d64a01f68",
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCartItemRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Item updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Item actualizado"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CartItem"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Remove item from cart",
                "description": "Remove a specific item from the cart",
                "operationId": "1c7edf5a8f1c00ab5426ead536e2790b",
                "parameters": [
                    {
                        "name": "item",
                        "in": "path",
                        "description": "Cart item ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Item removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Item eliminado del carrito"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/cart/clear": {
            "delete": {
                "tags": [
                    "Cart"
                ],
                "summary": "Clear cart",
                "description": "Remove all items from the cart",
                "operationId": "683480c28a5c7b1012b00deb22e70784",
                "responses": {
                    "200": {
                        "description": "Cart cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Carrito vaciado"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/categories": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get list of categories",
                "description": "Returns list of active categories with products count",
                "operationId": "getCategories",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Categories retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Categories"
                ],
                "summary": "Create a new category",
                "description": "Store a newly created category in storage",
                "operationId": "storeCategory",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "identifier"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Microsoft Azure"
                                    },
                                    "image": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "categories/azure.png"
                                    },
                                    "identifier": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "az1B23cD"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "sort_order": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 1
                                    },
                                    "columns": {
                                        "type": "integer",
                                        "maximum": 12,
                                        "minimum": 1,
                                        "example": 4
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Cloud computing services"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/categories/{id}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category by ID",
                "description": "Returns a single category with its products",
                "operationId": "getCategoryById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Categories"
                ],
                "summary": "Update category",
                "description": "Update the specified category in storage",
                "operationId": "updateCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Microsoft Azure"
                                    },
                                    "image": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "categories/azure.png"
                                    },
                                    "identifier": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "az1B23cD"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_deleted": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "sort_order": {
                                        "type": "integer",
                                        "minimum": 0,
                                        "example": 1
                                    },
                                    "columns": {
                                        "type": "integer",
                                        "maximum": 12,
                                        "minimum": 1,
                                        "example": 4
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Cloud computing services"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Category"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Categories"
                ],
                "summary": "Delete category",
                "description": "Soft delete the specified category",
                "operationId": "deleteCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category soft deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/categories/{id}/products": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get products for a category",
                "description": "Returns paginated list of products for a specific category",
                "operationId": "getCategoryProducts",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "featured",
                        "in": "query",
                        "description": "Filter featured products",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "bestsellers",
                        "in": "query",
                        "description": "Filter bestseller products",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search term for products",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 16,
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Category products retrieved successfully"
                                        },
                                        "data": {
                                            "allOf": [
                                                {
                                                    "$ref": "#/components/schemas/PaginatedResponse"
                                                },
                                                {
                                                    "properties": {
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/Product"
                                                            }
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found"
                    }
                }
            }
        },
        "/api/v1/categories/by-store/{storeId}": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get categories by store",
                "description": "Returns all categories for a specific store",
                "operationId": "5e2ce928521a68af5bfe5972f6745ee2",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store categories retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/categories/stats": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get category statistics",
                "description": "Returns category statistics with product counts",
                "operationId": "6e85925728cc9537e8d87ecbe330aed4",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/categories/menu": {
            "get": {
                "tags": [
                    "Categories"
                ],
                "summary": "Get categories with products for header menu",
                "description": "Returns categories with prioritized products for the header navigation menu",
                "operationId": "getCategoriesMenu",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Menu categories retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "image": {
                                                        "type": "string"
                                                    },
                                                    "identifier": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "products": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "idproduct": {
                                                                    "type": "integer"
                                                                },
                                                                "SkuId": {
                                                                    "type": "string"
                                                                },
                                                                "SkuTitle": {
                                                                    "type": "string"
                                                                },
                                                                "SkuDescription": {
                                                                    "type": "string"
                                                                },
                                                                "UnitPrice": {
                                                                    "type": "string"
                                                                },
                                                                "prod_icon": {
                                                                    "type": "string"
                                                                },
                                                                "is_top": {
                                                                    "type": "boolean"
                                                                },
                                                                "is_bestseller": {
                                                                    "type": "boolean"
                                                                },
                                                                "is_novelty": {
                                                                    "type": "boolean"
                                                                },
                                                                "priority_type": {
                                                                    "type": "string",
                                                                    "enum": [
                                                                        "top",
                                                                        "bestseller",
                                                                        "novelty",
                                                                        "random"
                                                                    ]
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/api/cfdi-usages": {
            "get": {
                "tags": [
                    "CFDI Usages"
                ],
                "summary": "Get all CFDI usages",
                "description": "Display a listing of all CFDI Usages.",
                "operationId": "a1f4c1df634fca20d62b7806dc6cbafa",
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status (1/0)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "physical",
                        "in": "query",
                        "description": "Filter by applies to physical person (1/0)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "moral",
                        "in": "query",
                        "description": "Filter by applies to moral person (1/0)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "tax_regime_code",
                        "in": "query",
                        "description": "Filter by compatible tax regime code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CFDI usages",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CfdiUsage"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "CFDI usages retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            },
            "post": {
                "tags": [
                    "CFDI Usages"
                ],
                "summary": "Create a new CFDI usage",
                "description": "Store a newly created CFDI Usage.",
                "operationId": "24799d66f6e31e02bcef2402cb9f3daf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code",
                                    "description",
                                    "applies_to_physical",
                                    "applies_to_moral"
                                ],
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "G03"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Gastos en general"
                                    },
                                    "applies_to_physical": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "applies_to_moral": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "applicable_tax_regimes": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "601",
                                            "603",
                                            "606"
                                        ]
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "store_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tax_regime_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "CFDI usage created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CfdiUsage"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "CFDI usage created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/cfdi-usages/{id}": {
            "get": {
                "tags": [
                    "CFDI Usages"
                ],
                "summary": "Get CFDI usage details",
                "description": "Display the specified CFDI usage.",
                "operationId": "0fd870377d31b14c7c687671f65dcf7f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CFDI usage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CFDI usage details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CfdiUsage"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "CFDI usage retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CFDI usage not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            },
            "put": {
                "tags": [
                    "CFDI Usages"
                ],
                "summary": "Update CFDI usage",
                "description": "Update the specified CFDI usage.",
                "operationId": "4e8ade4659f411f19894ec6d0d26e18f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CFDI usage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "code": {
                                        "type": "string",
                                        "example": "G03"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Gastos en general"
                                    },
                                    "applies_to_physical": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "applies_to_moral": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "applicable_tax_regimes": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "601",
                                            "603",
                                            "606"
                                        ]
                                    },
                                    "active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "store_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "tax_regime_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "CFDI usage updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CfdiUsage"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "CFDI usage updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "CFDI usage not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CFDI Usages"
                ],
                "summary": "Delete CFDI usage",
                "description": "Remove the specified CFDI usage.",
                "operationId": "1ad35c89f83a0336822e9752f0a23797",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CFDI usage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CFDI usage deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "CFDI usage deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CFDI usage not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/tax-regimes/{id_or_code}/cfdi-usages": {
            "get": {
                "tags": [
                    "CFDI Usages",
                    "Tax Regimes"
                ],
                "summary": "Get CFDI usages by tax regime ID or code",
                "description": "Get CFDI usages by tax regime ID or code.",
                "operationId": "f4e90b5f5f5008193b5bd0088c5956c8",
                "parameters": [
                    {
                        "name": "id_or_code",
                        "in": "path",
                        "description": "Tax regime ID or SAT code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status (1/0)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CFDI usages for the specified tax regime",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CfdiUsage"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "CFDI usages retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax regime not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/cfdi-usages/by-person-type/{type}": {
            "get": {
                "tags": [
                    "CFDI Usages"
                ],
                "summary": "Get CFDI usages by person type",
                "description": "Get CFDI usages by person type (physical or moral).",
                "operationId": "10713053b6136d2e22b03f53ea5c6767",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "description": "Person type (physical or moral)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "physical",
                                "moral"
                            ]
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status (1/0)",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of CFDI usages for the specified person type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CfdiUsage"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "CFDI usages retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - invalid person type"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/cfdi-usages/{id}/toggle-status": {
            "post": {
                "tags": [
                    "CFDI Usages"
                ],
                "summary": "Toggle active status of CFDI usage",
                "description": "Toggle active status of a CFDI Usage.",
                "operationId": "c0a2ec1aa60f6080ce760045e446eefd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CFDI Usage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CfdiUsage"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "CFDI usage status updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CFDI usage not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/cfdi-usages/{id}/sync-tax-regimes": {
            "post": {
                "tags": [
                    "CFDI Usages"
                ],
                "summary": "Sync tax regimes with CFDI usage",
                "description": "Synchronize tax regimes for a CFDI Usage.",
                "operationId": "b234b34e51c008d568621e79358edaf9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "CFDI Usage ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "tax_regime_ids": {
                                        "description": "Array of tax regime IDs to sync",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tax regimes synced successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/CfdiUsage"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax regimes synced successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "CFDI usage not found"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/api/v1/currencies": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get all currencies",
                "description": "Returns list of all currencies",
                "operationId": "6aa935f4025e0716792db4ab0f232517",
                "responses": {
                    "200": {
                        "description": "Currencies retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Dólar Americano"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "USD"
                                                    },
                                                    "symbol": {
                                                        "type": "string",
                                                        "example": "$"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Create new currency",
                "description": "Creates a new currency",
                "operationId": "1881774955b3af910431dbf4669bf2c1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code",
                                    "symbol"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Peso Mexicano"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "MXN"
                                    },
                                    "symbol": {
                                        "type": "string",
                                        "example": "$"
                                    },
                                    "symbol_position": {
                                        "type": "string",
                                        "example": "before"
                                    },
                                    "decimal_places": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Currency created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/currencies/{id}": {
            "get": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Get currency by ID",
                "description": "Returns a single currency",
                "operationId": "c66c7ba3e2f38c223d796c836d851972",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency retrieved successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Update currency",
                "description": "Updates an existing currency",
                "operationId": "6567b6a0a1e578e268bc6716c4d38bd0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Currencies"
                ],
                "summary": "Delete currency",
                "description": "Deletes a currency",
                "operationId": "a12bc95bf0a3d56c71c88c892ecd021b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/exchange-rates": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Get all exchange rates",
                "description": "Returns list of exchange rates",
                "operationId": "15c044960b9e52bfee1115f09b735cea",
                "parameters": [
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter by date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "from_currency",
                        "in": "query",
                        "description": "Filter by from currency code",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchange rates retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "from_currency": {
                                                        "type": "object"
                                                    },
                                                    "to_currency": {
                                                        "type": "object"
                                                    },
                                                    "rate": {
                                                        "type": "number",
                                                        "example": 17.5
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Create new exchange rate",
                "description": "Creates a new exchange rate",
                "operationId": "e2d2f4b0c0e7ebf8763fe6f23953efa3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "from_currency_id",
                                    "to_currency_id",
                                    "rate",
                                    "date"
                                ],
                                "properties": {
                                    "from_currency_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "to_currency_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "rate": {
                                        "type": "number",
                                        "example": 17.5
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-27"
                                    },
                                    "source": {
                                        "type": "string",
                                        "example": "manual"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Exchange rate created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/exchange-rates/{id}": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Get exchange rate by ID",
                "description": "Returns a single exchange rate",
                "operationId": "fca33d4d1617c95801abf4c69f2cd89c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exchange Rate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchange rate retrieved successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Update exchange rate",
                "description": "Updates an existing exchange rate",
                "operationId": "a69e89a2b17a7b2576b2cfa894a7b75a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exchange Rate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchange rate updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Delete exchange rate",
                "description": "Deletes an exchange rate",
                "operationId": "e9b22dd0e9064b0082d75f2faef89a50",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Exchange Rate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exchange rate deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/exchange-rates/convert": {
            "get": {
                "tags": [
                    "Exchange Rates"
                ],
                "summary": "Convert amount between currencies",
                "description": "Converts an amount from one currency to another",
                "operationId": "3fa01f5050f62d00431df17589d2d4d1",
                "parameters": [
                    {
                        "name": "amount",
                        "in": "query",
                        "description": "Amount to convert",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "To currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date for exchange rate (defaults to today)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Amount converted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "original_amount": {
                                                    "type": "number",
                                                    "example": 100
                                                },
                                                "converted_amount": {
                                                    "type": "number",
                                                    "example": 1750
                                                },
                                                "rate": {
                                                    "type": "number",
                                                    "example": 17.5
                                                },
                                                "from_currency": {
                                                    "type": "object"
                                                },
                                                "to_currency": {
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "API health check",
                "description": "Returns the current status of the API",
                "operationId": "5c5b6e19f2aae8dcd040c8c79cbcb282",
                "responses": {
                    "200": {
                        "description": "API is running",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "API is running"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "example": "2025-08-26T22:33:06.767Z"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "1.0.0"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/languages": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get all languages",
                "description": "Returns list of all languages",
                "operationId": "523c63027d51c8ac4f5e176a2b4146a9",
                "responses": {
                    "200": {
                        "description": "Languages retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Languages"
                ],
                "summary": "Create new language",
                "description": "Creates a new language",
                "operationId": "49813c78a923f64656fe710b61a9d9dc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "code",
                                    "locale"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Español"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "es"
                                    },
                                    "locale": {
                                        "type": "string",
                                        "example": "es_MX"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Language created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/languages/{id}": {
            "get": {
                "tags": [
                    "Languages"
                ],
                "summary": "Get language by ID",
                "description": "Returns a single language",
                "operationId": "3ff5333bfc99fa2dad988586e134d077",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Language ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language retrieved successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Languages"
                ],
                "summary": "Update language",
                "description": "Updates an existing language",
                "operationId": "2ddc8a5c067b0d186a6ab55c686f6cb9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Language ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Languages"
                ],
                "summary": "Delete language",
                "description": "Deletes a language",
                "operationId": "6cfaaf26d491ad5159bbadb72358ebc3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Language ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/microsoft-accounts": {
            "get": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "List Microsoft accounts",
                "description": "Get paginated list of Microsoft accounts for authenticated user",
                "operationId": "6efedf03d24b2a08b378670a89cc3a90",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "active",
                                "pending",
                                "inactive"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/MicrosoftAccount"
                                            }
                                        },
                                        "meta": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "Create Microsoft account",
                "description": "Create a new Microsoft account with Partner Center integration",
                "operationId": "7971767faa21ab332bd971f69893465b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreMicrosoftAccountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MicrosoftAccount"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/microsoft-accounts/{id}": {
            "get": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "Get Microsoft account",
                "description": "Get specific Microsoft account by ID",
                "operationId": "b70340f0ff1f8421ee8194e3677b40e8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MicrosoftAccount"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Account not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "Update Microsoft account",
                "description": "Update specific Microsoft account",
                "operationId": "e3d2dfa3291e1a2485a8db24989c03dd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMicrosoftAccountRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MicrosoftAccount"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "Delete Microsoft account",
                "description": "Soft delete Microsoft account",
                "operationId": "a59f73563bd2e94e9c6130a58e789c21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/microsoft-accounts/check-domain": {
            "post": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "Check domain availability",
                "description": "Check if domain is available globally (not user-specific)",
                "operationId": "de0ab7fda24b1be7b27bb05e80c6d27d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "domain": {
                                        "type": "string",
                                        "example": "mycompany"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Domain check result",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "available": {
                                            "type": "boolean"
                                        },
                                        "domain": {
                                            "type": "string"
                                        },
                                        "domain_concatenated": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/microsoft-accounts/{id}/set-default": {
            "patch": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "Set account as default",
                "description": "Mark specific account as default for the user",
                "operationId": "a065e59f2b3624d69205efa1d1c74bad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account set as default successfully"
                    }
                }
            }
        },
        "/api/v1/microsoft-accounts/{id}/verify": {
            "get": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "Verify account in Microsoft",
                "description": "Verify account status in Microsoft Partner Center",
                "operationId": "db5c8b9dc973f89e9aff31aaaaaacd2c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Verification result"
                    }
                }
            }
        },
        "/api/v1/microsoft-accounts/progress": {
            "get": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "Get user progress",
                "description": "Get current user's account setup progress",
                "operationId": "f42d51368c9afb4d081e203a8fe2c766",
                "responses": {
                    "200": {
                        "description": "Progress information"
                    }
                }
            }
        },
        "/api/v1/microsoft-accounts/{id}/retry": {
            "post": {
                "tags": [
                    "Microsoft Accounts"
                ],
                "summary": "Retry Microsoft account creation",
                "description": "Retry creating a Microsoft account in Partner Center for a pending account",
                "operationId": "fada132c579c67f70765164af6af0a9f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Microsoft account ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Retry operation completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "enum": [
                                                "COMPLETE_SUCCESS",
                                                "PARTIAL_SUCCESS",
                                                "COMPLETE_FAILURE"
                                            ]
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/MicrosoftAccount"
                                        },
                                        "microsoft_integration": {
                                            "properties": {
                                                "success": {
                                                    "type": "boolean"
                                                },
                                                "details": {
                                                    "type": "string"
                                                },
                                                "error_code": {
                                                    "type": "string",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Microsoft account not found"
                    },
                    "422": {
                        "description": "Account is not in pending status"
                    }
                }
            }
        },
        "/api/v1/payments/mitec/process": {
            "post": {
                "tags": [
                    "MITEC Payments"
                ],
                "summary": "Process payment with MITEC gateway",
                "description": "Processes a secure payment through MITEC 3DS v2",
                "operationId": "7c126e52856344f117106c8b0866b586",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "card_number",
                                    "card_name",
                                    "exp_month",
                                    "exp_year",
                                    "cvv",
                                    "amount"
                                ],
                                "properties": {
                                    "card_number": {
                                        "description": "Card number (test card)",
                                        "type": "string",
                                        "example": "4111111111111111"
                                    },
                                    "card_name": {
                                        "description": "Cardholder name",
                                        "type": "string",
                                        "example": "JOHN DOE"
                                    },
                                    "exp_month": {
                                        "description": "Expiry month (1-12)",
                                        "type": "integer",
                                        "example": 12
                                    },
                                    "exp_year": {
                                        "description": "Expiry year (YY format)",
                                        "type": "integer",
                                        "example": 25
                                    },
                                    "cvv": {
                                        "description": "Card CVV",
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "amount": {
                                        "description": "Transaction amount",
                                        "type": "number",
                                        "format": "float",
                                        "example": 100
                                    },
                                    "currency": {
                                        "description": "Currency code (optional)",
                                        "type": "string",
                                        "example": "MXN"
                                    },
                                    "billing_phone": {
                                        "description": "Billing phone (optional)",
                                        "type": "string",
                                        "example": "5555555555"
                                    },
                                    "billing_email": {
                                        "description": "Billing email (optional)",
                                        "type": "string",
                                        "example": "test@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment form generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "transaction_reference": {
                                            "type": "string",
                                            "example": "MKT1693234567_A1B2C3D4"
                                        },
                                        "form_html": {
                                            "description": "HTML form to submit to MITEC",
                                            "type": "string"
                                        },
                                        "mitec_url": {
                                            "type": "string",
                                            "example": "https://vip.e-pago.com.mx/ws3dsecure/Auth3dsecure"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Formulario de pago generado correctamente"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Los datos proporcionados no son válidos"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Error interno del servidor"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payments/mitec/webhook": {
            "post": {
                "tags": [
                    "MITEC Payments"
                ],
                "summary": "MITEC payment webhook",
                "description": "Receives payment status updates from MITEC",
                "operationId": "6df10692e2210286a40937512d6c993b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "transaction_reference": {
                                        "description": "Transaction reference",
                                        "type": "string"
                                    },
                                    "xml_response": {
                                        "description": "Decrypted XML response",
                                        "type": "string"
                                    },
                                    "parsed_data": {
                                        "description": "Parsed response data",
                                        "type": "object"
                                    },
                                    "status": {
                                        "description": "Payment status",
                                        "type": "string"
                                    },
                                    "source": {
                                        "description": "Source of webhook call",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Webhook processed successfully"
                    }
                }
            }
        },
        "/api/v1/payments/mitec/config": {
            "get": {
                "tags": [
                    "MITEC Payments"
                ],
                "summary": "Get MITEC configuration",
                "description": "Returns public MITEC configuration (non-sensitive data)",
                "operationId": "1dfb1f54308b3316a9e072b4a9a423fc",
                "responses": {
                    "200": {
                        "description": "Configuration retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "currency": {
                                            "type": "string",
                                            "example": "MXN"
                                        },
                                        "supported_cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "min_amount": {
                                            "type": "number",
                                            "example": 0.01
                                        },
                                        "max_amount": {
                                            "type": "number",
                                            "example": 999999.99
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/payment-sessions/{reference}": {
            "get": {
                "tags": [
                    "MITEC Payments"
                ],
                "summary": "Get payment session by reference",
                "description": "Retrieves payment session data including form HTML for MITEC submission",
                "operationId": "e0e14dab0c3d75047dadbbf93cfdc952",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Transaction reference",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment session retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "form_html": {
                                            "description": "HTML form for MITEC submission",
                                            "type": "string"
                                        },
                                        "mitec_url": {
                                            "description": "MITEC payment URL",
                                            "type": "string"
                                        },
                                        "transaction_reference": {
                                            "description": "Transaction reference",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Payment session not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payments/mitec/process-token": {
            "post": {
                "tags": [
                    "MITEC Payments"
                ],
                "summary": "Process MITEC response token",
                "description": "Processes the encrypted token returned by MITEC after payment",
                "operationId": "af4f9c2f5a3591186b932d54ce778e43",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "Encrypted token from MITEC",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            },
                            "example": {
                                "token": "encrypted_token_here"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Token processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "status": {
                                            "description": "Transaction status",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Transaction details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payments/mitec/callback": {
            "get": {
                "tags": [
                    "MITEC Payments"
                ],
                "summary": "Callback de MITEC - Procesa respuesta del gateway",
                "operationId": "85bf6d1c80759f8948971c21c54c3ff3",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "Token encriptado de respuesta de MITEC",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "302": {
                        "description": "Redirección al frontend con referencia de pago"
                    }
                }
            }
        },
        "/api/v1/payments/status/{reference}": {
            "get": {
                "tags": [
                    "MITEC Payments"
                ],
                "summary": "Consultar estado de pago por referencia",
                "operationId": "c452f8ec5af72667fad2d6f47c8b581c",
                "parameters": [
                    {
                        "name": "reference",
                        "in": "path",
                        "description": "Referencia del pago",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Estado del pago",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "payment": {
                                            "type": "object"
                                        },
                                        "order": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/orders": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get user orders",
                "description": "Returns a list of orders for the authenticated user",
                "operationId": "6390e58970c6b576bd8c1ec198cb5fbb",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by order status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "processing",
                                "completed",
                                "cancelled"
                            ]
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create order from cart",
                "description": "Creates a new order from the user's cart",
                "operationId": "8cb746eb001b58ac915930ba43cfdf0d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cart_token": {
                                        "description": "Cart token to convert to order",
                                        "type": "string"
                                    },
                                    "payment_method": {
                                        "description": "Payment method - Card type",
                                        "type": "string",
                                        "enum": [
                                            "credit_card",
                                            "debit_card"
                                        ]
                                    },
                                    "payment_card_id": {
                                        "description": "Payment card ID (if payment_method is card)",
                                        "type": "integer"
                                    },
                                    "billing_information_id": {
                                        "description": "Billing information ID",
                                        "type": "integer"
                                    },
                                    "notes": {
                                        "description": "Order notes",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order details",
                "description": "Returns details of a specific order",
                "operationId": "7830784c8e02a11ee0de8d1e6c90a0fd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order details retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}/cancel": {
            "put": {
                "tags": [
                    "Orders"
                ],
                "summary": "Cancel order",
                "description": "Cancels an order if it's still pending",
                "operationId": "80765c4a0b7c73e8ddc461f9d28cc90f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cancellation_reason": {
                                        "description": "Reason for cancellation",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order cancelled successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/tracking/{order_number}": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Track order by order number",
                "description": "Returns tracking information for an order",
                "operationId": "69f039b07ee550cc814348ebe16e9485",
                "parameters": [
                    {
                        "name": "order_number",
                        "in": "path",
                        "description": "Order number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order tracking information retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/orders/{orderNumber}/payment-details": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get order payment details",
                "description": "Returns detailed payment information for an order by order number",
                "operationId": "fd5cedbc1526705d2e91ff2e8a853119",
                "parameters": [
                    {
                        "name": "orderNumber",
                        "in": "path",
                        "description": "Order number",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/orders/statistics": {
            "get": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get user order statistics",
                "description": "Returns order statistics for the authenticated user",
                "operationId": "9591b83c8546ede86e2df8aa7c315d48",
                "responses": {
                    "200": {
                        "description": "Order statistics retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/{id}/process-microsoft": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Process order in Microsoft Partner Center",
                "description": "Sends the order to Microsoft Partner Center for provisioning",
                "operationId": "8d588eaeb6f85519502fa6841cada15b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order processed successfully in Microsoft Partner Center"
                    },
                    "400": {
                        "description": "Order cannot be processed (invalid status or other error)"
                    },
                    "404": {
                        "description": "Order not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/orders/provisioning/process/{order_id}": {
            "post": {
                "tags": [
                    "Order Provisioning"
                ],
                "summary": "Process order and provision products in Microsoft Partner Center",
                "description": "Processes a pending order and creates the products in Microsoft Partner Center",
                "operationId": "processOrderProvisioning",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "ID of the order to process",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products provisioned successfully in Partner Center"
                                        },
                                        "data": {
                                            "properties": {
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "cart_id": {
                                                    "type": "string",
                                                    "example": "cart-uuid"
                                                },
                                                "subscriptions_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order status is not processing",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order status is 'completed', expected 'processing'"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Provisioning failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create cart in Microsoft Partner Center"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/orders/provisioning/{order_id}/status": {
            "get": {
                "tags": [
                    "Order Provisioning"
                ],
                "summary": "Get order provisioning status",
                "description": "Retrieves the current status of an order and its provisioning details",
                "operationId": "getOrderProvisioningStatus",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "ID of the order",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order status retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "order_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "order_number": {
                                                    "type": "string",
                                                    "example": "ORD-20250903-001"
                                                },
                                                "fulfillment_status": {
                                                    "type": "string",
                                                    "example": "completed"
                                                },
                                                "total_amount": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 299.99
                                                },
                                                "cart_items_count": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "subscriptions_count": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/orders/provisioning/pending": {
            "get": {
                "tags": [
                    "Order Provisioning"
                ],
                "summary": "Get orders that need provisioning",
                "description": "Retrieves all orders with pending fulfillment status that need to be processed",
                "operationId": "getPendingOrders",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pending orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 20
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/orders/provisioning/batch-process": {
            "post": {
                "tags": [
                    "Order Provisioning"
                ],
                "summary": "Batch process multiple orders",
                "description": "Processes multiple orders at once for Partner Center provisioning",
                "operationId": "batchProcessOrders",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_ids": {
                                        "description": "Array of order IDs to process (max 10)",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            123,
                                            124,
                                            125
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Batch processing completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Processed 2 orders successfully, 1 failed"
                                        },
                                        "data": {
                                            "properties": {
                                                "results": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "summary": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "successful": {
                                                            "type": "integer",
                                                            "example": 2
                                                        },
                                                        "failed": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/payment-cards": {
            "get": {
                "tags": [
                    "Payment Cards"
                ],
                "summary": "Get user's payment cards",
                "description": "Returns list of user's payment cards (secured)",
                "operationId": "f2d4420017ab3be4c5f628f308889c74",
                "parameters": [
                    {
                        "name": "active_only",
                        "in": "query",
                        "description": "Show only active cards",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment cards retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "masked_card_number": {
                                                        "type": "string",
                                                        "example": "**** **** **** 1234"
                                                    },
                                                    "brand": {
                                                        "type": "string",
                                                        "example": "VISA"
                                                    },
                                                    "card_type": {
                                                        "type": "string",
                                                        "example": "credit"
                                                    },
                                                    "is_default": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "is_expired": {
                                                        "type": "boolean",
                                                        "example": false
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Payment Cards"
                ],
                "summary": "Add new payment card",
                "description": "Creates a new payment card (tokenized and encrypted)",
                "operationId": "97c3703d9dcbc5e1ebb521662082701b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "card_number",
                                    "expiry_month",
                                    "expiry_year",
                                    "cardholder_name",
                                    "mitec_merchant_used"
                                ],
                                "properties": {
                                    "card_number": {
                                        "type": "string",
                                        "example": "4111111111111111"
                                    },
                                    "expiry_month": {
                                        "type": "integer",
                                        "example": 12
                                    },
                                    "expiry_year": {
                                        "type": "integer",
                                        "example": 2025
                                    },
                                    "cardholder_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "mitec_merchant_used": {
                                        "type": "string",
                                        "example": "merchant_123"
                                    },
                                    "mitec_card_id": {
                                        "type": "string",
                                        "example": "mitec_card_456"
                                    },
                                    "is_default": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Payment card added successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payment-cards/{id}": {
            "get": {
                "tags": [
                    "Payment Cards"
                ],
                "summary": "Get payment card by ID",
                "description": "Returns a single payment card (user must own the card)",
                "operationId": "e7a6d8c8be32b3e0f27b8971e43bd31f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment card ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment card retrieved successfully"
                    },
                    "404": {
                        "description": "Payment card not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Payment Cards"
                ],
                "summary": "Update payment card",
                "description": "Updates payment card settings (limited fields for security)",
                "operationId": "8eb321de1f47388b5c8aa3fdefd93fe7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment card ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "cardholder_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "is_default": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment card updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Payment Cards"
                ],
                "summary": "Delete payment card",
                "description": "Soft deletes a payment card (marks as inactive)",
                "operationId": "ffcf5e1aeeb21230474551259abb8168",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment card ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment card deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payment-cards/{id}/set-default": {
            "post": {
                "tags": [
                    "Payment Cards"
                ],
                "summary": "Set card as default",
                "description": "Sets a payment card as the default for the user",
                "operationId": "b84c2d5e975b8d9ea4c1ab2a78c7e39d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment card ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Default card updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payment-cards/validate-expiration": {
            "get": {
                "tags": [
                    "Payment Cards"
                ],
                "summary": "Validate expiration of all user cards",
                "description": "Returns expiration status of all user's payment cards",
                "operationId": "ed7b72df32c0d994c85b0ff0288c8354",
                "responses": {
                    "200": {
                        "description": "Card expiration validation completed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "expired_cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "expiring_soon": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "valid_cards": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payment-cards/{id}/validate-expiration": {
            "get": {
                "tags": [
                    "Payment Cards"
                ],
                "summary": "Validate expiration of specific card",
                "description": "Returns detailed expiration status of a specific payment card",
                "operationId": "c43a2fffb031c245b59c046309caf6c2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Payment card ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Card expiration status retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "is_expired": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "is_expiring_soon": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "days_until_expiry": {
                                            "type": "integer",
                                            "example": 45
                                        },
                                        "expiry_date": {
                                            "type": "string",
                                            "example": "2025-12-31"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/payment-cards/valid-for-payment": {
            "get": {
                "tags": [
                    "Payment Cards"
                ],
                "summary": "Get valid cards for payment",
                "description": "Returns only active and non-expired cards that can be used for payments",
                "operationId": "910a38ecf24591369c30746bd75420a3",
                "responses": {
                    "200": {
                        "description": "Valid payment cards retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "summary": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get all permissions",
                "description": "Returns list of permissions grouped by module",
                "operationId": "92174e83c707809850676c48ddcf726d",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in name or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "description": "Filter by permission group",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "grouped",
                        "in": "query",
                        "description": "Return permissions grouped by module",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permissions retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Create new permission",
                "description": "Creates a new permission",
                "operationId": "05ed0cdb4abfced8a5e7dfa615768823",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug",
                                    "group"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Create Products"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "products.create"
                                    },
                                    "group": {
                                        "type": "string",
                                        "example": "products"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Allows creating new products"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Permission created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission by ID",
                "description": "Returns a single permission with roles",
                "operationId": "89e4d6bc05d76b9667eb6b0c1d86c1fc",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission retrieved successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Update permission",
                "description": "Updates an existing permission",
                "operationId": "32db2489ce28e57dd00a6f3324efc828",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Delete permission",
                "description": "Deletes a permission",
                "operationId": "214c1a8a52aa98374e65be8c9f26005e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/permissions/groups": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission groups",
                "description": "Returns all permission groups",
                "operationId": "b44fa0aa4e4d720cd885e73d346f8725",
                "responses": {
                    "200": {
                        "description": "Permission groups retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/permissions/{id}/roles": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission roles",
                "description": "Returns all roles that have this permission",
                "operationId": "d0fdd87019de2171859e516560a85b5d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission roles retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/postal-codes": {
            "get": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Get all postal codes",
                "description": "Retrieve paginated list of postal codes with optional search and filtering",
                "operationId": "995316afcc4aacf1e8408be95bff6f76",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in postal code, city, state, or country",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "44100"
                        }
                    },
                    {
                        "name": "country",
                        "in": "query",
                        "description": "Filter by country code",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "MX"
                        }
                    },
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Filter by state",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "JAL"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Postal codes retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Postal codes retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 31514
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "idpostalcode": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "pc_postalcode": {
                                                                "type": "string",
                                                                "example": "44100"
                                                            },
                                                            "pc_city": {
                                                                "type": "string",
                                                                "example": "Guadalajara"
                                                            },
                                                            "pc_state": {
                                                                "type": "string",
                                                                "example": "JAL"
                                                            },
                                                            "pc_statelarge": {
                                                                "type": "string",
                                                                "example": "Jalisco"
                                                            },
                                                            "pc_countrycode": {
                                                                "type": "string",
                                                                "example": "MX"
                                                            },
                                                            "pc_countrylarge": {
                                                                "type": "string",
                                                                "example": "México"
                                                            },
                                                            "formatted_address": {
                                                                "type": "string",
                                                                "example": "Guadalajara, Jalisco, México"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Create new postal code",
                "description": "Create a new postal code entry",
                "operationId": "41bc1d6b17962f8efa2568dfadecd94e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "pc_postalcode",
                                    "pc_city",
                                    "pc_state",
                                    "pc_countrycode",
                                    "pc_countrylarge"
                                ],
                                "properties": {
                                    "pc_postalcode": {
                                        "type": "string",
                                        "example": "44100"
                                    },
                                    "pc_city": {
                                        "type": "string",
                                        "example": "Guadalajara"
                                    },
                                    "pc_state": {
                                        "type": "string",
                                        "example": "JAL"
                                    },
                                    "pc_countrycode": {
                                        "type": "string",
                                        "example": "MX"
                                    },
                                    "pc_statelarge": {
                                        "type": "string",
                                        "example": "Jalisco"
                                    },
                                    "pc_countrylarge": {
                                        "type": "string",
                                        "example": "México"
                                    },
                                    "pc_culture": {
                                        "type": "string",
                                        "example": "es-MX"
                                    },
                                    "pc_lang": {
                                        "type": "string",
                                        "example": "es"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Postal code created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/postal-codes/{id}": {
            "get": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Get postal code by ID",
                "description": "Retrieve a specific postal code by its ID",
                "operationId": "c97cc47312d39e5abbb0c14f7978a9f0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Postal code ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Postal code retrieved successfully"
                    },
                    "404": {
                        "description": "Postal code not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Update postal code",
                "description": "Update an existing postal code",
                "operationId": "42ad7dd158dbc94b7f32becfdeb82c0d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Postal code ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pc_postalcode": {
                                        "type": "string",
                                        "example": "44100"
                                    },
                                    "pc_city": {
                                        "type": "string",
                                        "example": "Guadalajara"
                                    },
                                    "pc_state": {
                                        "type": "string",
                                        "example": "JAL"
                                    },
                                    "pc_countrycode": {
                                        "type": "string",
                                        "example": "MX"
                                    },
                                    "pc_statelarge": {
                                        "type": "string",
                                        "example": "Jalisco"
                                    },
                                    "pc_countrylarge": {
                                        "type": "string",
                                        "example": "México"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Postal code updated successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Postal code not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Delete postal code",
                "description": "Delete a postal code entry",
                "operationId": "c218d9b60fe65c6227daee534d1dfb3d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Postal code ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Postal code deleted successfully"
                    },
                    "404": {
                        "description": "Postal code not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/postal-codes/search/{code}": {
            "get": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Search postal code (Public)",
                "description": "Public endpoint to search for postal code information by code",
                "operationId": "93a128e6996d3cea3003acc0cd1105c1",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Postal code to search",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "44100"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Postal code found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Postal code found"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "idpostalcode": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "pc_postalcode": {
                                                        "type": "string",
                                                        "example": "44100"
                                                    },
                                                    "pc_city": {
                                                        "type": "string",
                                                        "example": "Guadalajara"
                                                    },
                                                    "pc_state": {
                                                        "type": "string",
                                                        "example": "JAL"
                                                    },
                                                    "pc_statelarge": {
                                                        "type": "string",
                                                        "example": "Jalisco"
                                                    },
                                                    "pc_countrycode": {
                                                        "type": "string",
                                                        "example": "MX"
                                                    },
                                                    "pc_countrylarge": {
                                                        "type": "string",
                                                        "example": "México"
                                                    },
                                                    "formatted_address": {
                                                        "type": "string",
                                                        "example": "Guadalajara, Jalisco, México"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Postal code not found"
                    }
                }
            }
        },
        "/api/v1/postal-codes/autocomplete": {
            "get": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Autocomplete postal codes (Public)",
                "description": "Public endpoint for postal code autocomplete functionality",
                "operationId": "3ebfdf540ceb3e210329ce682ead78c4",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query (postal code, city, state, or country)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "44100"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of results",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Autocomplete results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Autocomplete results"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "idpostalcode": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "pc_postalcode": {
                                                        "type": "string",
                                                        "example": "44100"
                                                    },
                                                    "pc_city": {
                                                        "type": "string",
                                                        "example": "Guadalajara"
                                                    },
                                                    "pc_state": {
                                                        "type": "string",
                                                        "example": "JAL"
                                                    },
                                                    "pc_statelarge": {
                                                        "type": "string",
                                                        "example": "Jalisco"
                                                    },
                                                    "pc_countrycode": {
                                                        "type": "string",
                                                        "example": "MX"
                                                    },
                                                    "pc_countrylarge": {
                                                        "type": "string",
                                                        "example": "México"
                                                    },
                                                    "formatted_address": {
                                                        "type": "string",
                                                        "example": "Guadalajara, Jalisco, México"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/api/v1/postal-codes/address/{code}": {
            "get": {
                "tags": [
                    "Postal Codes"
                ],
                "summary": "Get formatted address by postal code (Public)",
                "description": "Public endpoint to get formatted address information for autocomplete forms",
                "operationId": "cda3f218aa0b3edca60d8bbceaecc4bb",
                "parameters": [
                    {
                        "name": "code",
                        "in": "path",
                        "description": "Postal code",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "44100"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Address information found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Address information found"
                                        },
                                        "data": {
                                            "properties": {
                                                "postal_code": {
                                                    "type": "string",
                                                    "example": "44100"
                                                },
                                                "city": {
                                                    "type": "string",
                                                    "example": "Guadalajara"
                                                },
                                                "state": {
                                                    "type": "string",
                                                    "example": "Jalisco"
                                                },
                                                "country": {
                                                    "type": "string",
                                                    "example": "México"
                                                },
                                                "country_code": {
                                                    "type": "string",
                                                    "example": "MX"
                                                },
                                                "formatted_address": {
                                                    "type": "string",
                                                    "example": "Guadalajara, Jalisco, México"
                                                },
                                                "neighborhoods": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Guadalajara"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Address not found"
                    }
                }
            }
        },
        "/api/v1/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get list of products",
                "description": "Returns paginated list of products grouped by SkuId + Id with variants",
                "operationId": "072fd15d3be55577bb08c19d19f1e75c",
                "parameters": [
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in product title and publisher",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of products per page (1-100)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 16,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort field",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "title",
                            "enum": [
                                "title",
                                "unit_price",
                                "publisher"
                            ]
                        }
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "Sort order",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "asc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 883
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "10-year audit log retention"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Para ayudar a cumplir..."
                                                    },
                                                    "product_id": {
                                                        "type": "string",
                                                        "example": "CFQ7TTC0HL8Z"
                                                    },
                                                    "sku_id": {
                                                        "type": "string",
                                                        "example": "0001"
                                                    },
                                                    "publisher": {
                                                        "type": "string",
                                                        "example": "Microsoft Corporation"
                                                    },
                                                    "logo": {
                                                        "type": "string",
                                                        "example": "1/products/CFQ7TTC0HL8Z/icon.png"
                                                    },
                                                    "details": {
                                                        "properties": {
                                                            "market": {
                                                                "type": "string",
                                                                "example": "MX"
                                                            },
                                                            "segment": {
                                                                "type": "string",
                                                                "example": "Commercial"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "category": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "variants": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 883
                                                                },
                                                                "billing_plan": {
                                                                    "type": "string",
                                                                    "example": "Monthly"
                                                                },
                                                                "unit_price": {
                                                                    "type": "string",
                                                                    "example": "1.92"
                                                                },
                                                                "term_duration": {
                                                                    "type": "string",
                                                                    "example": "P1M"
                                                                },
                                                                "sku_id": {
                                                                    "type": "string",
                                                                    "example": "0001"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 16
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "total_pages": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Create a new product",
                "description": "Creates a new product with the provided data",
                "operationId": "eda0d526a50c0273ae224eb766440226",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "SkuTitle",
                                    "ProductId",
                                    "SkuId",
                                    "Publisher",
                                    "UnitPrice",
                                    "BillingPlan",
                                    "category_id"
                                ],
                                "properties": {
                                    "SkuTitle": {
                                        "type": "string",
                                        "example": "Microsoft 365 Business Premium"
                                    },
                                    "ProductId": {
                                        "type": "string",
                                        "example": "CFQ7TTC0LDL0"
                                    },
                                    "SkuId": {
                                        "type": "string",
                                        "example": "0001"
                                    },
                                    "SkuDescription": {
                                        "type": "string",
                                        "example": "Descripción del producto"
                                    },
                                    "Publisher": {
                                        "type": "string",
                                        "example": "Microsoft Corporation"
                                    },
                                    "UnitPrice": {
                                        "type": "string",
                                        "example": "25.50"
                                    },
                                    "BillingPlan": {
                                        "type": "string",
                                        "example": "Monthly"
                                    },
                                    "TermDuration": {
                                        "type": "string",
                                        "example": "P1M"
                                    },
                                    "Market": {
                                        "type": "string",
                                        "example": "MX"
                                    },
                                    "Segment": {
                                        "type": "string",
                                        "example": "Commercial"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "prod_icon": {
                                        "type": "string",
                                        "example": "path/to/icon.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Product created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1001
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Microsoft 365 Business Premium"
                                                },
                                                "product_id": {
                                                    "type": "string",
                                                    "example": "CFQ7TTC0LDL0"
                                                },
                                                "publisher": {
                                                    "type": "string",
                                                    "example": "Microsoft Corporation"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product by ID",
                "description": "Returns a single product by its internal ID",
                "operationId": "e607d06420046014759462af284aeb59",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product internal ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 883
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "10-year audit log retention"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Para ayudar a cumplir..."
                                                },
                                                "product_id": {
                                                    "type": "string",
                                                    "example": "CFQ7TTC0HL8Z"
                                                },
                                                "sku_id": {
                                                    "type": "string",
                                                    "example": "0001"
                                                },
                                                "publisher": {
                                                    "type": "string",
                                                    "example": "Microsoft Corporation"
                                                },
                                                "logo": {
                                                    "type": "string",
                                                    "example": "1/products/CFQ7TTC0HL8Z/icon.png"
                                                },
                                                "pricing": {
                                                    "properties": {
                                                        "unit_price": {
                                                            "type": "string",
                                                            "example": "1.92"
                                                        },
                                                        "currency": {
                                                            "type": "string",
                                                            "example": "USD"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "details": {
                                                    "properties": {
                                                        "term_duration": {
                                                            "type": "string",
                                                            "example": "P1M"
                                                        },
                                                        "billing_plan": {
                                                            "type": "string",
                                                            "example": "Monthly"
                                                        },
                                                        "market": {
                                                            "type": "string",
                                                            "example": "MX"
                                                        },
                                                        "segment": {
                                                            "type": "string",
                                                            "example": "Commercial"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "category": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Products"
                ],
                "summary": "Update a product",
                "description": "Updates an existing product with the provided data",
                "operationId": "d3addbe72313169741e652404694ef9d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "SkuTitle": {
                                        "type": "string",
                                        "example": "Microsoft 365 Business Premium Updated"
                                    },
                                    "SkuDescription": {
                                        "type": "string",
                                        "example": "Descripción actualizada"
                                    },
                                    "Publisher": {
                                        "type": "string",
                                        "example": "Microsoft Corporation"
                                    },
                                    "UnitPrice": {
                                        "type": "string",
                                        "example": "30.00"
                                    },
                                    "BillingPlan": {
                                        "type": "string",
                                        "example": "Annual"
                                    },
                                    "TermDuration": {
                                        "type": "string",
                                        "example": "P1Y"
                                    },
                                    "Market": {
                                        "type": "string",
                                        "example": "MX"
                                    },
                                    "Segment": {
                                        "type": "string",
                                        "example": "Commercial"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "prod_icon": {
                                        "type": "string",
                                        "example": "path/to/new-icon.png"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 883
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Microsoft 365 Business Premium Updated"
                                                },
                                                "product_id": {
                                                    "type": "string",
                                                    "example": "CFQ7TTC0LDL0"
                                                },
                                                "publisher": {
                                                    "type": "string",
                                                    "example": "Microsoft Corporation"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Products"
                ],
                "summary": "Delete a product",
                "description": "Deletes an existing product",
                "operationId": "bbf520f1a23d6a5f3dfb12813b5930d6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    },
                    "500": {
                        "description": "Server error"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/detail/{id}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product details by internal ID",
                "description": "Returns a specific product with its billing variants by internal ID (idproduct)",
                "operationId": "6c1698104eb817183e591153740f0b4c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product internal ID (idproduct)",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully"
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/v1/products/by-product-id/{productId}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product with all variants by ProductId",
                "description": "Returns a product with all its variants grouped by Microsoft ProductId",
                "operationId": "a41aaf9d09a84825628151114620c8f3",
                "parameters": [
                    {
                        "name": "productId",
                        "in": "path",
                        "description": "Microsoft Product ID (e.g., CFQ7TTC0HL8Z)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product with variants retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 883
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "10-year audit log retention"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Para ayudar a cumplir..."
                                                },
                                                "product_id": {
                                                    "type": "string",
                                                    "example": "CFQ7TTC0HL8Z"
                                                },
                                                "sku_id": {
                                                    "type": "string",
                                                    "example": "0001"
                                                },
                                                "publisher": {
                                                    "type": "string",
                                                    "example": "Microsoft Corporation"
                                                },
                                                "logo": {
                                                    "type": "string",
                                                    "example": "1/products/CFQ7TTC0HL8Z/icon.png"
                                                },
                                                "details": {
                                                    "properties": {
                                                        "term_duration": {
                                                            "type": "string",
                                                            "example": "P1M"
                                                        },
                                                        "billing_plan": {
                                                            "type": "string",
                                                            "example": "Monthly"
                                                        },
                                                        "market": {
                                                            "type": "string",
                                                            "example": "MX"
                                                        },
                                                        "segment": {
                                                            "type": "string",
                                                            "example": "Commercial"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "category": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "variants": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 883
                                                            },
                                                            "billing_plan": {
                                                                "type": "string",
                                                                "example": "Monthly"
                                                            },
                                                            "unit_price": {
                                                                "type": "string",
                                                                "example": "1.92"
                                                            },
                                                            "term_duration": {
                                                                "type": "string",
                                                                "example": "P1M"
                                                            },
                                                            "sku_id": {
                                                                "type": "string",
                                                                "example": "0001"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product with variants retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                }
            }
        },
        "/api/v1/products/by-sku-id/{skuId}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product by SKU ID",
                "description": "Returns a specific product with its billing variants by SKU ID",
                "operationId": "8671ed827d290a0367a2cd6b27e0b8dd",
                "parameters": [
                    {
                        "name": "skuId",
                        "in": "path",
                        "description": "Product SKU ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 883
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "AI Builder Capacity Add-on T1"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Construya el tren y..."
                                                },
                                                "product_id": {
                                                    "type": "string",
                                                    "example": "CFQ7TTC0LH0Z"
                                                },
                                                "sku_id": {
                                                    "type": "string",
                                                    "example": "0001"
                                                },
                                                "publisher": {
                                                    "type": "string",
                                                    "example": "Microsoft Corporation"
                                                },
                                                "logo": {
                                                    "type": "string",
                                                    "example": "1/products/CFQ7TTC0LH0Z/icon.png"
                                                },
                                                "details": {
                                                    "properties": {
                                                        "market": {
                                                            "type": "string",
                                                            "example": "MX"
                                                        },
                                                        "segment": {
                                                            "type": "string",
                                                            "example": "Commercial"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "category": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "variants": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 883
                                                            },
                                                            "billing_plan": {
                                                                "type": "string",
                                                                "example": "Monthly"
                                                            },
                                                            "unit_price": {
                                                                "type": "string",
                                                                "example": "1.92"
                                                            },
                                                            "term_duration": {
                                                                "type": "string",
                                                                "example": "P1M"
                                                            },
                                                            "sku_id": {
                                                                "type": "string",
                                                                "example": "0001"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Product retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/search": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Advanced product search",
                "description": "Advanced search with multiple filters",
                "operationId": "c4b5f98a6710fc918c4fd75f66e46818",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category_id",
                        "in": "query",
                        "description": "Filter by category ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price filter",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price filter",
                        "required": false,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Search results retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/products/by-store/{storeId}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get products by store",
                "description": "Returns all products for a specific store",
                "operationId": "4c30f04685a8e905fc4462541e52168f",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store products retrieved successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/stats": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get product statistics",
                "description": "Returns product statistics by store and category",
                "operationId": "2a095ca52faf61780c81737524e2ccda",
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/popular": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get popular products",
                "description": "Returns cached list of popular/top products",
                "operationId": "b3a954000e37577e52fd30a09b21ec25",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/api/v1/products/clear-cache": {
            "post": {
                "tags": [
                    "Products"
                ],
                "summary": "Clear product caches",
                "description": "Clear all product related caches (admin operation)",
                "operationId": "a2c71fd61c53a40fb1b680de146e4c12",
                "responses": {
                    "200": {
                        "description": "Cache cleared successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "All product caches cleared successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "500": {
                        "description": "Error clearing cache"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/products/featured": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get featured products by category",
                "description": "Returns featured products grouped by category with cache",
                "operationId": "87ee1c21b3ca4d1b9584f6cf0ea015ab",
                "parameters": [
                    {
                        "name": "categories_limit",
                        "in": "query",
                        "description": "Number of categories to return (default: 5)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 10,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "products_per_category",
                        "in": "query",
                        "description": "Number of products per category (default: 6)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 20,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Featured products by category retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/products/slide": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get slide products",
                "description": "Returns random list of products marked for slide display",
                "operationId": "9373e4338bf90bc2c9a598aade083866",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of products to return",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Slide products retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/roles": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get all roles",
                "description": "Returns list of roles with their permissions",
                "operationId": "ba50ce69f980ab35a9463c42e4b4b932",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in name or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "with_permissions",
                        "in": "query",
                        "description": "Include permissions in response",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of roles per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Roles retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Create new role",
                "description": "Creates a new role",
                "operationId": "295391adbd51895625231808e6fc9ed8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Administrator"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "admin"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Full system access"
                                    },
                                    "level": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "permission_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Role created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles/{id}": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role by ID",
                "description": "Returns a single role with permissions",
                "operationId": "c15c14a048e8031f79144b0a83716491",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role retrieved successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Roles"
                ],
                "summary": "Update role",
                "description": "Updates an existing role",
                "operationId": "7812777d71ad530db91b8b163d93b9a0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Delete role",
                "description": "Deletes a role",
                "operationId": "cfd8457158ec77a99b27b425d3d99515",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles/{id}/permissions": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role permissions",
                "description": "Returns all permissions for a role",
                "operationId": "8c3e0e4fbf530b2b91fe2511ffd2b3f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role permissions retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Roles"
                ],
                "summary": "Assign permissions to role",
                "description": "Assigns permissions to a role",
                "operationId": "92aecdf26cb41a90031c765591737ee5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "permission_ids"
                                ],
                                "properties": {
                                    "permission_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Permissions assigned successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles/{id}/permissions/{permissionId}": {
            "delete": {
                "tags": [
                    "Roles"
                ],
                "summary": "Remove permission from role",
                "description": "Removes a permission from a role",
                "operationId": "bd862f4a5d9851132559520d4808b3de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "permissionId",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission removed successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/roles/{id}/users": {
            "get": {
                "tags": [
                    "Roles"
                ],
                "summary": "Get role users",
                "description": "Returns all users assigned to a role",
                "operationId": "baebb4344b15f624706888e63c3a0f23",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role users retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/settings": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get all system settings",
                "description": "Returns all global system settings",
                "operationId": "ea3c021ce643ec0a5a59bf79ec0b376a",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by settings category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "app",
                                "mail",
                                "cache",
                                "database",
                                "marketplace"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Settings retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/settings/app-info": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get application information",
                "description": "Returns basic application information and status",
                "operationId": "4cda5ee0381c06d4994afdeb0351f86e",
                "responses": {
                    "200": {
                        "description": "App info retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/settings/marketplace": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get marketplace specific settings",
                "description": "Returns marketplace configuration and limits",
                "operationId": "f6a10c489e5c495847afb64878de9033",
                "responses": {
                    "200": {
                        "description": "Marketplace settings retrieved successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Settings"
                ],
                "summary": "Update marketplace settings",
                "description": "Updates marketplace configuration",
                "operationId": "e7a64963bf2ab17a02aa43120575e910",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "pagination": {
                                        "properties": {
                                            "default_per_page": {
                                                "type": "integer",
                                                "example": 16
                                            },
                                            "max_per_page": {
                                                "type": "integer",
                                                "example": 100
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "search": {
                                        "properties": {
                                            "min_query_length": {
                                                "type": "integer",
                                                "example": 2
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Settings updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/settings/system-status": {
            "get": {
                "tags": [
                    "Settings"
                ],
                "summary": "Get system status",
                "description": "Returns system status and health checks",
                "operationId": "192a40ce6c7610f4cc557d628213c0d0",
                "responses": {
                    "200": {
                        "description": "System status retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/store-configurations": {
            "get": {
                "tags": [
                    "Store Configurations"
                ],
                "summary": "Get all store configurations",
                "description": "Returns list of store configurations with filters",
                "operationId": "7ceca6a3ac28e4abd24e5beb46d8aef7",
                "parameters": [
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Filter by configuration key",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store configurations retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Store Configurations"
                ],
                "summary": "Create new store configuration",
                "description": "Creates a new store configuration",
                "operationId": "31a921216646881c9c1739d9c225ab16",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "store_id",
                                    "key",
                                    "value"
                                ],
                                "properties": {
                                    "store_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "key": {
                                        "type": "string",
                                        "example": "tax_rate"
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "16.0"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "decimal"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store configuration created successfully"
                    }
                }
            }
        },
        "/api/v1/store-configurations/{id}": {
            "get": {
                "tags": [
                    "Store Configurations"
                ],
                "summary": "Get store configuration by ID",
                "description": "Returns a single store configuration",
                "operationId": "5dd38045fa495eb1d5b7dfa9a9d4b55e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Configuration ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store configuration retrieved successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Store Configurations"
                ],
                "summary": "Update store configuration",
                "description": "Updates an existing store configuration",
                "operationId": "908fdb955c9b7d1059f4ec9e38d1ef41",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Configuration ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store configuration updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Store Configurations"
                ],
                "summary": "Delete store configuration",
                "description": "Deletes a store configuration",
                "operationId": "6a3212580347f85ed0aeaefff7cb5dda",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store Configuration ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store configuration deleted successfully"
                    }
                }
            }
        },
        "/api/v1/store-configurations/by-store/{storeId}": {
            "get": {
                "tags": [
                    "Store Configurations"
                ],
                "summary": "Get configurations by store ID",
                "description": "Returns all configurations for a specific store",
                "operationId": "f7dfc90ae2356a74e3559230d1f9e3de",
                "parameters": [
                    {
                        "name": "storeId",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store configurations retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/store-configurations/bulk": {
            "post": {
                "tags": [
                    "Store Configurations"
                ],
                "summary": "Bulk create or update store configurations",
                "description": "Creates or updates multiple store configurations at once",
                "operationId": "c1f0fc8859bb3b651e92175aed4df05e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "store_id",
                                    "configurations"
                                ],
                                "properties": {
                                    "store_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "configurations": {
                                        "type": "object",
                                        "example": {
                                            "tax_rate": "16.0",
                                            "currency_symbol": "$"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store configurations processed successfully"
                    }
                }
            }
        },
        "/api/v1/stores": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get all stores",
                "description": "Returns paginated list of stores",
                "operationId": "3fe4afb07765b0bf4392a5c813fd08ff",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Stores retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Create new store",
                "description": "Creates a new store",
                "operationId": "de27404d0998b67b8528f82769adb404",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "slug"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Tienda México"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "mexico"
                                    },
                                    "domain": {
                                        "type": "string",
                                        "example": "mexico.ejemplo.com"
                                    },
                                    "default_language": {
                                        "type": "string",
                                        "example": "es"
                                    },
                                    "default_currency": {
                                        "type": "string",
                                        "example": "MXN"
                                    },
                                    "timezone": {
                                        "type": "string",
                                        "example": "America/Mexico_City"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Store created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stores/{id}": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get store by ID",
                "description": "Returns a single store",
                "operationId": "dc82473bca231338ff2c921c754ec737",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Store not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Stores"
                ],
                "summary": "Update store",
                "description": "Updates an existing store",
                "operationId": "f276c2d0d8d024b727db10545cf6f26f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Tienda México"
                                    },
                                    "slug": {
                                        "type": "string",
                                        "example": "mexico"
                                    },
                                    "domain": {
                                        "type": "string",
                                        "example": "mexico.ejemplo.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Store updated successfully"
                    },
                    "404": {
                        "description": "Store not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Delete store",
                "description": "Soft deletes a store",
                "operationId": "4e54f13e15503e0f24677e275a1a9fc0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store deleted successfully"
                    },
                    "404": {
                        "description": "Store not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stores/{id}/configurations": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get store configurations",
                "description": "Gets all configurations for a store",
                "operationId": "3df28b5f8570fb668768917c288939db",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter by category",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Configurations retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Set store configuration",
                "description": "Sets configuration values for a store",
                "operationId": "777b065dc444631e64a11d28ae97277e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category": {
                                        "type": "string",
                                        "example": "branding"
                                    },
                                    "key_name": {
                                        "type": "string",
                                        "example": "logo_color"
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "https://example.com/logo.png"
                                    },
                                    "type": {
                                        "type": "string",
                                        "example": "url"
                                    },
                                    "is_public": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Configuration set successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stores/{id}/languages": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get store languages",
                "description": "Gets all languages for a store",
                "operationId": "c127b0d2f5c3d3cc5167dcc1f17edaef",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store languages retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Add language to store",
                "description": "Adds a language to a store",
                "operationId": "4dfd80dc38bb3d1150327fea23600e20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "language_ids"
                                ],
                                "properties": {
                                    "language_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Languages added to store successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stores/{id}/languages/{languageId}": {
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Remove language from store",
                "description": "Removes a language from a store",
                "operationId": "b249b873cd3be0535e6df6ae99ad0951",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "languageId",
                        "in": "path",
                        "description": "Language ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language removed from store successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stores/{id}/currencies": {
            "get": {
                "tags": [
                    "Stores"
                ],
                "summary": "Get store currencies",
                "description": "Gets all currencies for a store",
                "operationId": "246b3899667efdd85555bc93f727aa30",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Store currencies retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Stores"
                ],
                "summary": "Add currency to store",
                "description": "Adds a currency to a store",
                "operationId": "1908d2d0e087c5d6451f1c6347d57e2e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "currency_ids"
                                ],
                                "properties": {
                                    "currency_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Currencies added to store successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/stores/{id}/currencies/{currencyId}": {
            "delete": {
                "tags": [
                    "Stores"
                ],
                "summary": "Remove currency from store",
                "description": "Removes a currency from a store",
                "operationId": "dcffd76d4f9a6d80c05e8c9993067756",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Store ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "currencyId",
                        "in": "path",
                        "description": "Currency ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Currency removed from store successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tax-regimes": {
            "get": {
                "tags": [
                    "Tax Regimes"
                ],
                "summary": "List tax regimes (PUBLIC)",
                "description": "Gets the list of tax regimes with optional filters. This endpoint is public, no authentication required.",
                "operationId": "8ba273738ae5b6487555ad25f6898810",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "store_id",
                        "in": "query",
                        "description": "Filter by store",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "sat_code",
                        "in": "query",
                        "description": "Filter by SAT code",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tax regimes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax regimes retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/TaxRegime"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tax Regimes"
                ],
                "summary": "Create tax regime",
                "description": "Creates a new tax regime",
                "operationId": "0ca6e7faa09195275886657fc93c8ae2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sat_code": {
                                        "description": "SAT code",
                                        "type": "integer",
                                        "example": 601
                                    },
                                    "name": {
                                        "description": "Regime name",
                                        "type": "string",
                                        "maxLength": 120,
                                        "example": "General de Ley Personas Morales"
                                    },
                                    "relation": {
                                        "description": "Relation",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "store_id": {
                                        "description": "Store ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "active": {
                                        "description": "Active status",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Tax regime created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax regime created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxRegime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tax-regimes/{id}": {
            "get": {
                "tags": [
                    "Tax Regimes"
                ],
                "summary": "Get specific tax regime (PUBLIC)",
                "description": "Gets the details of a specific tax regime. This endpoint is public, no authentication required.",
                "operationId": "307c809c7ea099558fd51a965961501a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax regime ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax regime found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax regime found"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxRegime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax regime not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Tax Regimes"
                ],
                "summary": "Update tax regime",
                "description": "Updates an existing tax regime",
                "operationId": "7b803a4d0cccb18136831f725efb58ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax regime ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sat_code": {
                                        "description": "SAT code",
                                        "type": "integer",
                                        "example": 601
                                    },
                                    "name": {
                                        "description": "Regime name",
                                        "type": "string",
                                        "maxLength": 120,
                                        "example": "General de Ley Personas Morales"
                                    },
                                    "relation": {
                                        "description": "Relation",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "store_id": {
                                        "description": "Store ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "active": {
                                        "description": "Active status",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tax regime updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax regime updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxRegime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Régimen fiscal no encontrado"
                    },
                    "422": {
                        "description": "Error de validación"
                    },
                    "401": {
                        "description": "No autorizado"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tax Regimes"
                ],
                "summary": "Delete tax regime",
                "description": "Deletes a tax regime (soft delete)",
                "operationId": "fe78018c3e594e4a381b3192fc01d5bd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax regime ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tax regime deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax regime deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax regime not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tax-regimes/grouped": {
            "get": {
                "tags": [
                    "Tax Regimes"
                ],
                "summary": "Get grouped tax regimes (PUBLIC)",
                "description": "Gets tax regimes organized hierarchically, ready to populate a select. Parents (relation=0) contain their corresponding children.",
                "operationId": "6f27c5517612eb706579009b9cbd61df",
                "parameters": [
                    {
                        "name": "active_only",
                        "in": "query",
                        "description": "Only active regimes",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Grouped tax regimes",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Grouped tax regimes retrieved"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Personas físicas"
                                                    },
                                                    "sat_code": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "relation": {
                                                        "type": "integer",
                                                        "example": 0
                                                    },
                                                    "children": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/TaxRegime"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tax-regimes/{id}/toggle-status": {
            "post": {
                "tags": [
                    "Tax Regimes"
                ],
                "summary": "Toggle active/inactive status",
                "description": "Changes the active/inactive status of a tax regime",
                "operationId": "c210db53ef1d0ea12bdab1cb106d709e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax regime ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Status changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tax regime status updated"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/TaxRegime"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax regime not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/tax-regimes/{id}/cfdi-usages": {
            "get": {
                "tags": [
                    "Tax Regimes"
                ],
                "summary": "Get CFDI usages for a tax regime (PUBLIC)",
                "description": "Gets all CFDI usages available for a specific tax regime using the pivot table relationship",
                "operationId": "8b23279b453ae91244027d5488cff16f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Tax regime ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active CFDI usages only",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "default": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CFDI usages retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "CFDI usages retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CfdiUsage"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Tax regime not found"
                    }
                }
            }
        },
        "/api/v1/translations": {
            "get": {
                "tags": [
                    "Translations"
                ],
                "summary": "Get all translations",
                "description": "Returns list of translations with filters",
                "operationId": "0f7650d7299fed763ecdf30b0f5b918e",
                "parameters": [
                    {
                        "name": "language_id",
                        "in": "query",
                        "description": "Filter by language ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "Filter by translation key",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Translations retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Translations"
                ],
                "summary": "Create new translation",
                "description": "Creates a new translation",
                "operationId": "11cab888cf8fc00c5ea2459809adce3d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "language_id",
                                    "key",
                                    "value"
                                ],
                                "properties": {
                                    "language_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "key": {
                                        "type": "string",
                                        "example": "welcome_message"
                                    },
                                    "value": {
                                        "type": "string",
                                        "example": "Bienvenido"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Translation created successfully"
                    }
                }
            }
        },
        "/api/v1/translations/{id}": {
            "get": {
                "tags": [
                    "Translations"
                ],
                "summary": "Get translation by ID",
                "description": "Returns a single translation",
                "operationId": "81cc7566a88d268eb72f92d911683012",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Translation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Translation retrieved successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Translations"
                ],
                "summary": "Update translation",
                "description": "Updates an existing translation",
                "operationId": "72f2a9a1275b1bac4efd74043ab9cf89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Translation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Translation updated successfully"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Translations"
                ],
                "summary": "Delete translation",
                "description": "Deletes a translation",
                "operationId": "a2d6c750fbe252f2663717621c0e992a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Translation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Translation deleted successfully"
                    }
                }
            }
        },
        "/api/v1/translations/by-language/{languageCode}": {
            "get": {
                "tags": [
                    "Translations"
                ],
                "summary": "Get translations by language code",
                "description": "Returns all translations for a specific language",
                "operationId": "1d60372bc5c849d306604311c550eef7",
                "parameters": [
                    {
                        "name": "languageCode",
                        "in": "path",
                        "description": "Language code (e.g., es, en, pt)",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Translations retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/translations/bulk": {
            "post": {
                "tags": [
                    "Translations"
                ],
                "summary": "Bulk create or update translations",
                "description": "Creates or updates multiple translations at once",
                "operationId": "edddfa4130c40f66c6f96d79688ec576",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "language_id",
                                    "translations"
                                ],
                                "properties": {
                                    "language_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "translations": {
                                        "type": "object",
                                        "example": {
                                            "welcome": "Bienvenido",
                                            "goodbye": "Adiós"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Translations processed successfully"
                    }
                }
            }
        },
        "/api/v1/user-activities/log": {
            "post": {
                "tags": [
                    "User Activity Logs"
                ],
                "summary": "Log user activity",
                "description": "Records a new activity performed by the authenticated user. Super simple endpoint - just pass the activity_id and optional data.",
                "operationId": "12f1ae1c6ce92c18ab267dabf93f1570",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "activity_id": {
                                        "description": "Activity ID to record",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "module": {
                                        "description": "Module where executed (optional)",
                                        "type": "string",
                                        "maxLength": 120,
                                        "example": "billing"
                                    },
                                    "title": {
                                        "description": "Descriptive title (optional)",
                                        "type": "string",
                                        "maxLength": 120,
                                        "example": "Created new billing"
                                    },
                                    "reference_id": {
                                        "description": "Object reference ID (optional)",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "bill_123"
                                    },
                                    "metadata": {
                                        "description": "Additional data (optional)",
                                        "type": "object",
                                        "example": {
                                            "amount": 100,
                                            "currency": "USD"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Activity logged successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity recorded successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserActivityLog"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-activities": {
            "get": {
                "tags": [
                    "User Activity Logs"
                ],
                "summary": "Get user activity logs",
                "description": "Gets the activity history of the authenticated user",
                "operationId": "e82b455ee55a8bbaf6fc98bd50031bff",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Records per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "activity_id",
                        "in": "query",
                        "description": "Filter by activity ID",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "module",
                        "in": "query",
                        "description": "Filter by module",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date (YYYY-MM-DD)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Logs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logs retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/UserActivityLog"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-activities/recent": {
            "get": {
                "tags": [
                    "User Activity Logs"
                ],
                "summary": "Get recent user activities",
                "description": "Gets the latest activities from the authenticated user",
                "operationId": "78c32c5280b1775ac3f884c930dc4bb4",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Maximum number of records",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "maximum": 50,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recent activities retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Recent activities retrieved"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserActivityLog"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-activities/stats": {
            "get": {
                "tags": [
                    "User Activity Logs"
                ],
                "summary": "Get user activity statistics",
                "description": "Gets summarized statistics of user activities",
                "operationId": "9649c1d0961a079e96fa40dbe9a4529b",
                "parameters": [
                    {
                        "name": "days",
                        "in": "query",
                        "description": "Number of days backwards for statistics",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "maximum": 365,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Statistics retrieved"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_activities": {
                                                    "type": "integer",
                                                    "example": 156
                                                },
                                                "activities_by_type": {
                                                    "type": "object"
                                                },
                                                "activities_by_module": {
                                                    "type": "object"
                                                },
                                                "daily_activity": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user-activities/quick-log/{activityId}": {
            "post": {
                "tags": [
                    "User Activity Logs"
                ],
                "summary": "Quick activity log (super simple)",
                "description": "Super simple endpoint - just pass the activity ID in the URL and you're done. Ideal for quick logs.",
                "operationId": "c84725d11760d177a7f918efbad0728e",
                "parameters": [
                    {
                        "name": "activityId",
                        "in": "path",
                        "description": "Activity ID to log",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "module": {
                                        "description": "Module (optional)",
                                        "type": "string",
                                        "example": "billing"
                                    },
                                    "title": {
                                        "description": "Title (optional)",
                                        "type": "string",
                                        "example": "Action performed"
                                    },
                                    "reference_id": {
                                        "description": "Reference ID (optional)",
                                        "type": "string",
                                        "example": "item_123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Activity logged",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Activity logged"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Activity not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "description": "Returns list of users with their roles",
                "operationId": "b343fe695d1beaa03b7deb8449dd1b7c",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search in name or email",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "description": "Filter by role slug",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "description": "Filter by active status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of users per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully"
                    }
                }
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create new user",
                "description": "Creates a new user",
                "operationId": "71d86dd873f9e567415d5da5929a0dea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "role_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "description": "Returns a single user with roles and permissions",
                "operationId": "0197efcfd303b59ccdaad3e01097a0e0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User retrieved successfully"
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "description": "Updates an existing user",
                "operationId": "e27513375b71e3b3dcc043da6f62129c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Soft delete a user",
                "description": "Soft deletes a user (can be restored later)",
                "operationId": "ae967f8cf847f7d2ad9eba19833f58cd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User soft deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully (can be restored)"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/permissions": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user permissions",
                "description": "Returns all permissions for a user through their roles",
                "operationId": "78edae0e25dd874ee75a5b6a4e2b832c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User permissions retrieved successfully"
                    }
                }
            }
        },
        "/api/v1/users/{id}/roles": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Assign roles to user",
                "description": "Assigns roles to a user",
                "operationId": "dc62b6445112dc617ec1dde048880b46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "role_ids"
                                ],
                                "properties": {
                                    "role_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "store_id": {
                                        "type": "integer",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Roles assigned successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/roles/{roleId}": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Remove role from user",
                "description": "Removes a role from a user",
                "operationId": "0b495601e466a10a0a3c221a3a958624",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "roleId",
                        "in": "path",
                        "description": "Role ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role removed successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/restore": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Restore a soft deleted user",
                "description": "Restores a user that was soft deleted",
                "operationId": "2699c29d9f3149d10e7604f1ad44b96d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User restored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User restored successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/force": {
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Permanently delete a user",
                "description": "Permanently deletes a user from the database",
                "operationId": "87ea8295b3e51abff9bb7c2c68a476b1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User permanently deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User permanently deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/deactivate": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Deactivate a user",
                "description": "Deactivates a user account",
                "operationId": "b9b0787990aaf978fbd2e58eeab2ae8c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deactivated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deactivated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users/{id}/activate": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Activate a user",
                "description": "Activates a user account",
                "operationId": "2fa3e9e1fdb43014f089a7bef0fda0ae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User activated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User activated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/invoices/generate-from-order/{orderId}": {
            "post": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Generate invoice from order ID",
                "description": "Generates a CFDI 4.0 electronic invoice for a paid order using default test data",
                "operationId": "6738faf87d163ee6dbf1b0e9765b7099",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order ID to generate invoice for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 25
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invoice generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice generated successfully from order #25"
                                        },
                                        "data": {
                                            "properties": {
                                                "invoice_info": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 33
                                                        },
                                                        "number": {
                                                            "type": "string",
                                                            "example": "FAC-000001"
                                                        },
                                                        "uuid": {
                                                            "type": "string",
                                                            "example": "12345678-1234-1234-1234-123456789012"
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "example": "stamped"
                                                        },
                                                        "total": {
                                                            "type": "string",
                                                            "example": "546.00"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "download_urls": {
                                                    "properties": {
                                                        "pdf": {
                                                            "type": "string",
                                                            "example": "http://localhost:8000/api/v1/invoices/33/download/pdf"
                                                        },
                                                        "xml": {
                                                            "type": "string",
                                                            "example": "http://localhost:8000/api/v1/invoices/33/download/xml"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Order not paid or invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order #25 must be paid before invoicing"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order #25 not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invoices/{id}/download/pdf": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Download invoice PDF",
                "description": "Downloads the PDF file of a stamped invoice",
                "operationId": "117a3da52f0bafa8640b36235fe51d54",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 33
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "PDF file download",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invoice not stamped",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice is not stamped yet"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/invoices/{id}/download/xml": {
            "get": {
                "tags": [
                    "Invoices"
                ],
                "summary": "Download invoice XML",
                "description": "Downloads the XML file of a stamped invoice (CFDI)",
                "operationId": "97b47e438b8879e234967a2a739309d8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Invoice ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 33
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "XML file download",
                        "content": {
                            "application/xml": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invoice not stamped",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice is not stamped yet"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invoice not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invoice not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Category": {
                "required": [
                    "name",
                    "identifier"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Microsoft 365"
                    },
                    "image": {
                        "type": "string",
                        "example": "categories/m365.png"
                    },
                    "identifier": {
                        "type": "string",
                        "example": "hp1C56hG"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_deleted": {
                        "type": "boolean",
                        "example": false
                    },
                    "sort_order": {
                        "type": "integer",
                        "example": 2
                    },
                    "columns": {
                        "type": "integer",
                        "example": 4
                    },
                    "description": {
                        "type": "string",
                        "example": "Best of school, work and life"
                    },
                    "visits": {
                        "type": "integer",
                        "example": 0
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "active_products_count": {
                        "type": "integer",
                        "example": 25
                    }
                },
                "type": "object"
            },
            "BillingPeriod": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Monthly"
                    },
                    "code": {
                        "type": "string",
                        "example": "P1M"
                    },
                    "description": {
                        "type": "string",
                        "example": "Monthly billing"
                    },
                    "payment_count": {
                        "type": "integer",
                        "example": 1
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Product": {
                "required": [
                    "category_id",
                    "title",
                    "product_id",
                    "sku_id",
                    "sku_title",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Access LTSC 2021"
                    },
                    "product_id": {
                        "type": "string",
                        "example": "DG7GMGF0D7FV"
                    },
                    "sku_id": {
                        "type": "string",
                        "example": "0001"
                    },
                    "sku_title": {
                        "type": "string",
                        "example": "Access LTSC 2021"
                    },
                    "publisher": {
                        "type": "string",
                        "example": "Microsoft Corporation"
                    },
                    "description": {
                        "type": "string",
                        "example": "Access LTSC 2021 database application"
                    },
                    "segment": {
                        "type": "string",
                        "example": "Commercial"
                    },
                    "market": {
                        "type": "string",
                        "example": "MX"
                    },
                    "currency": {
                        "type": "string",
                        "example": "USD"
                    },
                    "icon": {
                        "type": "string",
                        "example": "products/DG7GMGF0D7FV/icon.png"
                    },
                    "slide_image": {
                        "type": "string",
                        "example": "products/DG7GMGF0D7FV/slide.png"
                    },
                    "screenshot1": {
                        "type": "string",
                        "example": "products/DG7GMGF0D7FV/image1.png"
                    },
                    "screenshot2": {
                        "type": "string",
                        "example": "products/DG7GMGF0D7FV/image2.png"
                    },
                    "screenshot3": {
                        "type": "string",
                        "example": "products/DG7GMGF0D7FV/image3.png"
                    },
                    "screenshot4": {
                        "type": "string",
                        "example": "products/DG7GMGF0D7FV/image4.png"
                    },
                    "is_top": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_bestseller": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_slide": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_novelty": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "category": {
                        "$ref": "#/components/schemas/Category"
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductVariant"
                        }
                    }
                },
                "type": "object"
            },
            "ProductVariant": {
                "required": [
                    "product_id",
                    "billing_period_id",
                    "term_duration",
                    "billing_plan",
                    "unit_price"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "billing_period_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "microsoft_id": {
                        "type": "string",
                        "example": "CFQ7TTC0LFLS"
                    },
                    "term_duration": {
                        "type": "string",
                        "example": "P1M"
                    },
                    "billing_plan": {
                        "type": "string",
                        "example": "Monthly"
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "float",
                        "example": 171
                    },
                    "erp_price": {
                        "type": "number",
                        "format": "float",
                        "example": 171
                    },
                    "pricing_tier_min": {
                        "type": "integer",
                        "example": 1
                    },
                    "pricing_tier_max": {
                        "type": "integer",
                        "example": 999
                    },
                    "effective_start_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "effective_end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "unit_of_measure": {
                        "type": "string",
                        "example": "License"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "catalog_item_id": {
                        "type": "string",
                        "example": "DG7GMGF0D7FV:0001:123"
                    },
                    "is_purchasable": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "price_per_payment": {
                        "type": "number",
                        "format": "float",
                        "example": 171
                    },
                    "billing_period": {
                        "$ref": "#/components/schemas/BillingPeriod"
                    }
                },
                "type": "object"
            },
            "ApiResponse": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": true
                    },
                    "message": {
                        "type": "string",
                        "example": "Operation completed successfully"
                    },
                    "data": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PaginatedResponse": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "first_page_url": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/products?page=1"
                    },
                    "from": {
                        "type": "integer",
                        "example": 1
                    },
                    "last_page": {
                        "type": "integer",
                        "example": 5
                    },
                    "last_page_url": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/products?page=5"
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "next_page_url": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/products?page=2"
                    },
                    "path": {
                        "type": "string",
                        "example": "http://localhost:8000/api/v1/products"
                    },
                    "per_page": {
                        "type": "integer",
                        "example": 16
                    },
                    "prev_page_url": {
                        "type": "string",
                        "nullable": true
                    },
                    "to": {
                        "type": "integer",
                        "example": 16
                    },
                    "total": {
                        "type": "integer",
                        "example": 75
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid."
                    },
                    "errors": {
                        "properties": {
                            "field_name": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "example": "The field is required."
                                }
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AddToCartRequest": {
                "title": "Add to Cart Request",
                "description": "Request body for adding a product to cart",
                "required": [
                    "product_id",
                    "quantity"
                ],
                "properties": {
                    "product_id": {
                        "description": "Product ID",
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "description": "Quantity to add",
                        "type": "integer",
                        "maximum": 999,
                        "minimum": 1,
                        "example": 2
                    },
                    "metadata": {
                        "description": "Additional metadata",
                        "type": "object",
                        "example": {
                            "custom_config": "value"
                        },
                        "nullable": true
                    },
                    "store_id": {
                        "description": "Store ID",
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "StoreBillingInformationRequest": {
                "title": "Store Billing Information Request",
                "description": "Datos para crear nueva información de facturación",
                "required": [
                    "organization",
                    "rfc",
                    "tax_regime_id",
                    "cfdi_usage_id",
                    "postal_code",
                    "email",
                    "phone",
                    "config_id",
                    "store_id",
                    "code"
                ],
                "properties": {
                    "organization": {
                        "description": "Nombre de la organización",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Mi Empresa S.A. de C.V."
                    },
                    "rfc": {
                        "description": "RFC de la organización",
                        "type": "string",
                        "maxLength": 15,
                        "example": "ABC123456789"
                    },
                    "tax_regime_id": {
                        "description": "ID del régimen fiscal",
                        "type": "integer",
                        "example": 1
                    },
                    "cfdi_usage_id": {
                        "description": "ID del uso de CFDI",
                        "type": "integer",
                        "example": 1
                    },
                    "postal_code": {
                        "description": "Código postal",
                        "type": "string",
                        "maxLength": 10,
                        "example": "01000"
                    },
                    "email": {
                        "description": "Correo electrónico de facturación",
                        "type": "string",
                        "format": "email",
                        "maxLength": 180,
                        "example": "facturacion@empresa.com"
                    },
                    "phone": {
                        "description": "Teléfono de contacto",
                        "type": "string",
                        "maxLength": 15,
                        "example": "5555551234"
                    },
                    "file": {
                        "description": "Archivo adjunto opcional",
                        "type": "string",
                        "maxLength": 120,
                        "nullable": true
                    },
                    "active": {
                        "description": "Estado activo/inactivo",
                        "type": "boolean",
                        "example": true
                    },
                    "config_id": {
                        "description": "ID de configuración",
                        "type": "integer",
                        "example": 1
                    },
                    "store_id": {
                        "description": "ID de la tienda",
                        "type": "integer",
                        "example": 1
                    },
                    "account_id": {
                        "description": "ID de cuenta asociada",
                        "type": "integer",
                        "nullable": true
                    },
                    "code": {
                        "description": "Código único identificador",
                        "type": "string",
                        "maxLength": 20,
                        "example": "BILL001"
                    },
                    "is_default": {
                        "description": "Marcar como información por defecto",
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "StoreMicrosoftAccountRequest": {
                "title": "Store Microsoft Account Request",
                "description": "Request body for creating a new Microsoft account",
                "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "organization",
                    "domain"
                ],
                "properties": {
                    "first_name": {
                        "description": "First name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "John"
                    },
                    "last_name": {
                        "description": "Last name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "Doe"
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john.doe@company.com"
                    },
                    "phone": {
                        "description": "Phone number",
                        "type": "string",
                        "maxLength": 20,
                        "example": "+1234567890",
                        "nullable": true
                    },
                    "organization": {
                        "description": "Organization name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "My Company Inc"
                    },
                    "domain": {
                        "description": "Domain name (without .onmicrosoft.com)",
                        "type": "string",
                        "maxLength": 150,
                        "example": "mycompany"
                    },
                    "address": {
                        "description": "Address",
                        "type": "string",
                        "maxLength": 500,
                        "example": "123 Main St",
                        "nullable": true
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "maxLength": 100,
                        "example": "New York",
                        "nullable": true
                    },
                    "state_code": {
                        "description": "State code",
                        "type": "string",
                        "maxLength": 10,
                        "example": "NY",
                        "nullable": true
                    },
                    "state_name": {
                        "description": "State name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "New York",
                        "nullable": true
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "maxLength": 20,
                        "example": "10001",
                        "nullable": true
                    },
                    "country_code": {
                        "description": "Country code",
                        "type": "string",
                        "maxLength": 2,
                        "example": "US",
                        "nullable": true
                    },
                    "country_name": {
                        "description": "Country name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "United States",
                        "nullable": true
                    },
                    "language_code": {
                        "description": "Language code",
                        "type": "string",
                        "maxLength": 5,
                        "example": "en",
                        "nullable": true
                    },
                    "culture": {
                        "description": "Culture code",
                        "type": "string",
                        "maxLength": 10,
                        "example": "en-US",
                        "nullable": true
                    },
                    "is_default": {
                        "description": "Set as default account",
                        "type": "boolean",
                        "example": false,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateBillingInformationRequest": {
                "title": "Update Billing Information Request",
                "description": "Datos para actualizar información de facturación existente",
                "properties": {
                    "organization": {
                        "description": "Nombre de la organización",
                        "type": "string",
                        "maxLength": 255
                    },
                    "rfc": {
                        "description": "RFC de la organización",
                        "type": "string",
                        "maxLength": 15
                    },
                    "tax_regime_id": {
                        "description": "ID del régimen fiscal",
                        "type": "integer"
                    },
                    "cfdi_usage_id": {
                        "description": "ID del uso de CFDI",
                        "type": "integer"
                    },
                    "postal_code": {
                        "description": "Código postal",
                        "type": "string",
                        "maxLength": 10
                    },
                    "email": {
                        "description": "Correo electrónico de facturación",
                        "type": "string",
                        "format": "email",
                        "maxLength": 180
                    },
                    "phone": {
                        "description": "Teléfono de contacto",
                        "type": "string",
                        "maxLength": 15
                    },
                    "file": {
                        "description": "Archivo adjunto",
                        "type": "string",
                        "maxLength": 120,
                        "nullable": true
                    },
                    "active": {
                        "description": "Estado activo/inactivo",
                        "type": "boolean"
                    },
                    "config_id": {
                        "description": "ID de configuración",
                        "type": "integer"
                    },
                    "store_id": {
                        "description": "ID de la tienda",
                        "type": "integer"
                    },
                    "account_id": {
                        "description": "ID de cuenta asociada",
                        "type": "integer",
                        "nullable": true
                    },
                    "code": {
                        "description": "Código único identificador",
                        "type": "string",
                        "maxLength": 20
                    },
                    "is_default": {
                        "description": "Marcar como información por defecto",
                        "type": "boolean"
                    }
                },
                "type": "object"
            },
            "UpdateCartItemRequest": {
                "title": "Update Cart Item Request",
                "description": "Request body for updating a cart item",
                "properties": {
                    "quantity": {
                        "description": "New quantity",
                        "type": "integer",
                        "maximum": 999,
                        "minimum": 1,
                        "example": 3
                    },
                    "metadata": {
                        "description": "Additional metadata",
                        "type": "object",
                        "example": {
                            "custom_config": "new_value"
                        },
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateMicrosoftAccountRequest": {
                "title": "Update Microsoft Account Request",
                "description": "Request body for updating a Microsoft account",
                "properties": {
                    "first_name": {
                        "description": "First name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "John",
                        "nullable": true
                    },
                    "last_name": {
                        "description": "Last name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "Doe",
                        "nullable": true
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string",
                        "format": "email",
                        "maxLength": 255,
                        "example": "john.doe@company.com",
                        "nullable": true
                    },
                    "phone": {
                        "description": "Phone number",
                        "type": "string",
                        "maxLength": 20,
                        "example": "+1234567890",
                        "nullable": true
                    },
                    "organization": {
                        "description": "Organization name",
                        "type": "string",
                        "maxLength": 255,
                        "example": "My Company Inc",
                        "nullable": true
                    },
                    "address": {
                        "description": "Address",
                        "type": "string",
                        "maxLength": 500,
                        "example": "123 Main St",
                        "nullable": true
                    },
                    "city": {
                        "description": "City",
                        "type": "string",
                        "maxLength": 100,
                        "example": "New York",
                        "nullable": true
                    },
                    "state_code": {
                        "description": "State code",
                        "type": "string",
                        "maxLength": 10,
                        "example": "NY",
                        "nullable": true
                    },
                    "state_name": {
                        "description": "State name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "New York",
                        "nullable": true
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string",
                        "maxLength": 20,
                        "example": "10001",
                        "nullable": true
                    },
                    "country_code": {
                        "description": "Country code",
                        "type": "string",
                        "maxLength": 2,
                        "example": "US",
                        "nullable": true
                    },
                    "country_name": {
                        "description": "Country name",
                        "type": "string",
                        "maxLength": 100,
                        "example": "United States",
                        "nullable": true
                    },
                    "language_code": {
                        "description": "Language code",
                        "type": "string",
                        "maxLength": 5,
                        "example": "en",
                        "nullable": true
                    },
                    "culture": {
                        "description": "Culture code",
                        "type": "string",
                        "maxLength": 10,
                        "example": "en-US",
                        "nullable": true
                    },
                    "is_active": {
                        "description": "Is account active",
                        "type": "boolean",
                        "example": true,
                        "nullable": true
                    },
                    "is_default": {
                        "description": "Set as default account",
                        "type": "boolean",
                        "example": false,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Activity": {
                "title": "Activity",
                "description": "Catálogo de actividades del marketplace",
                "properties": {
                    "id": {
                        "description": "ID único de la actividad",
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "description": "Nombre de la actividad",
                        "type": "string",
                        "maxLength": 180
                    },
                    "description": {
                        "description": "Descripción de la actividad",
                        "type": "string"
                    },
                    "icon": {
                        "description": "Clase de icono FontAwesome",
                        "type": "string",
                        "maxLength": 45,
                        "nullable": true
                    },
                    "active": {
                        "description": "Estado activo/inactivo de la actividad",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Fecha de creación",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Fecha de última actualización",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Fecha de eliminación (soft delete)",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "BillingInformation": {
                "title": "Billing Information",
                "description": "Datos fiscales del usuario",
                "properties": {
                    "id": {
                        "description": "ID único de la información de facturación",
                        "type": "integer",
                        "format": "int64"
                    },
                    "organization": {
                        "description": "Nombre de la organización",
                        "type": "string",
                        "maxLength": 255
                    },
                    "rfc": {
                        "description": "RFC de la organización",
                        "type": "string",
                        "maxLength": 15
                    },
                    "tax_regime_id": {
                        "description": "ID del régimen fiscal",
                        "type": "integer"
                    },
                    "cfdi_usage_id": {
                        "description": "ID del uso de CFDI",
                        "type": "integer"
                    },
                    "postal_code": {
                        "description": "Código postal",
                        "type": "string",
                        "maxLength": 10
                    },
                    "email": {
                        "description": "Correo electrónico de facturación",
                        "type": "string",
                        "format": "email",
                        "maxLength": 180
                    },
                    "phone": {
                        "description": "Teléfono de contacto",
                        "type": "string",
                        "maxLength": 15
                    },
                    "file": {
                        "description": "Archivo adjunto (constancia fiscal, etc.)",
                        "type": "string",
                        "maxLength": 120,
                        "nullable": true
                    },
                    "active": {
                        "description": "Estado activo/inactivo",
                        "type": "boolean"
                    },
                    "config_id": {
                        "description": "ID de configuración",
                        "type": "integer"
                    },
                    "store_id": {
                        "description": "ID de la tienda",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "ID del usuario propietario",
                        "type": "integer"
                    },
                    "account_id": {
                        "description": "ID de cuenta asociada",
                        "type": "integer",
                        "nullable": true
                    },
                    "code": {
                        "description": "Código único identificador",
                        "type": "string",
                        "maxLength": 20
                    },
                    "is_default": {
                        "description": "Indica si es la información de facturación por defecto",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Fecha de creación",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Fecha de última actualización",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Fecha de eliminación (soft delete)",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Cart": {
                "title": "Cart",
                "description": "Shopping cart model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "session_id": {
                        "type": "string",
                        "example": "laravel_session_123",
                        "nullable": true
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "currency_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "abandoned",
                            "converted",
                            "merged"
                        ],
                        "example": "active"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "subtotal": {
                        "type": "number",
                        "format": "float",
                        "example": 99.99
                    },
                    "tax_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 15.99
                    },
                    "total_amount": {
                        "type": "number",
                        "format": "float",
                        "example": 115.98
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItem"
                        }
                    }
                },
                "type": "object"
            },
            "CartItem": {
                "title": "Cart Item",
                "description": "Shopping cart item model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "cart_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "float",
                        "example": 49.99
                    },
                    "total_price": {
                        "type": "number",
                        "format": "float",
                        "example": 99.98
                    },
                    "metadata": {
                        "type": "object",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "saved_for_later",
                            "removed"
                        ],
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object"
            },
            "CfdiUsage": {
                "title": "CFDI Usage",
                "description": "Uso de CFDI según el catálogo del SAT México",
                "properties": {
                    "id": {
                        "description": "ID único del uso de CFDI",
                        "type": "integer",
                        "format": "int64"
                    },
                    "code": {
                        "description": "Código SAT del uso de CFDI (ej: G01, D01, etc.)",
                        "type": "string",
                        "maxLength": 5
                    },
                    "description": {
                        "description": "Descripción del uso de CFDI",
                        "type": "string",
                        "maxLength": 255
                    },
                    "applies_to_physical": {
                        "description": "Si aplica para personas físicas",
                        "type": "boolean"
                    },
                    "applies_to_moral": {
                        "description": "Si aplica para personas morales",
                        "type": "boolean"
                    },
                    "applicable_tax_regimes": {
                        "description": "Códigos de regímenes fiscales aplicables (JSON)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "active": {
                        "description": "Estado activo/inactivo",
                        "type": "boolean"
                    },
                    "store_id": {
                        "description": "ID de la tienda",
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Fecha de creación",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Fecha de actualización",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Fecha de eliminación",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "MicrosoftAccount": {
                "title": "Microsoft Account",
                "description": "Microsoft Account model",
                "properties": {
                    "id": {
                        "description": "Account ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "user_id": {
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64"
                    },
                    "microsoft_id": {
                        "description": "Microsoft Partner Center ID",
                        "type": "string",
                        "nullable": true
                    },
                    "domain": {
                        "description": "Domain name",
                        "type": "string"
                    },
                    "domain_concatenated": {
                        "description": "Full Microsoft domain",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "First name",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Last name",
                        "type": "string"
                    },
                    "email": {
                        "description": "Email address",
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "description": "Phone number",
                        "type": "string"
                    },
                    "organization": {
                        "description": "Organization name",
                        "type": "string"
                    },
                    "address": {
                        "description": "Address",
                        "type": "string"
                    },
                    "city": {
                        "description": "City",
                        "type": "string"
                    },
                    "state_code": {
                        "description": "State code",
                        "type": "string"
                    },
                    "state_name": {
                        "description": "State name",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "Postal code",
                        "type": "string"
                    },
                    "country_code": {
                        "description": "Country code",
                        "type": "string"
                    },
                    "country_name": {
                        "description": "Country name",
                        "type": "string"
                    },
                    "language_code": {
                        "description": "Language code",
                        "type": "string"
                    },
                    "culture": {
                        "description": "Culture code",
                        "type": "string"
                    },
                    "is_active": {
                        "description": "Is account active",
                        "type": "boolean"
                    },
                    "is_default": {
                        "description": "Is default account",
                        "type": "boolean"
                    },
                    "is_current": {
                        "description": "Is current account",
                        "type": "boolean"
                    },
                    "is_pending": {
                        "description": "Is account pending",
                        "type": "boolean"
                    },
                    "configuration_id": {
                        "description": "Configuration ID",
                        "type": "integer",
                        "nullable": true
                    },
                    "store_id": {
                        "description": "Store ID",
                        "type": "integer",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Created at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Updated at",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Deleted at",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "title": "Order Item",
                "description": "Order item with complete product snapshot",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "order_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1,
                        "nullable": true
                    },
                    "sku_id": {
                        "type": "string",
                        "example": "CFQ7TTC0LH18:0001"
                    },
                    "product_title": {
                        "type": "string",
                        "example": "Microsoft 365 Business Premium"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "unit_price": {
                        "type": "number",
                        "format": "float",
                        "example": 49.99
                    },
                    "line_total": {
                        "type": "number",
                        "format": "float",
                        "example": 99.98
                    },
                    "fulfillment_status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "processing",
                            "fulfilled",
                            "cancelled",
                            "refunded"
                        ]
                    },
                    "product_metadata": {
                        "type": "object"
                    },
                    "pricing_metadata": {
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "PostalCode": {
                "title": "Postal Code",
                "description": "Códigos postales con información geográfica asociada",
                "properties": {
                    "idpostalcode": {
                        "description": "ID único del código postal",
                        "type": "integer",
                        "format": "int64"
                    },
                    "pc_postalcode": {
                        "description": "Código postal",
                        "type": "string",
                        "maxLength": 8,
                        "nullable": true
                    },
                    "pc_city": {
                        "description": "Ciudad",
                        "type": "string",
                        "maxLength": 180,
                        "nullable": true
                    },
                    "pc_state": {
                        "description": "Estado (código corto)",
                        "type": "string",
                        "maxLength": 45,
                        "nullable": true
                    },
                    "pc_countrycode": {
                        "description": "Código del país",
                        "type": "string",
                        "maxLength": 3,
                        "nullable": true
                    },
                    "pc_culture": {
                        "description": "Cultura/locale",
                        "type": "string",
                        "maxLength": 10,
                        "nullable": true
                    },
                    "pc_lang": {
                        "description": "Idioma",
                        "type": "string",
                        "maxLength": 10,
                        "nullable": true
                    },
                    "pc_statelarge": {
                        "description": "Nombre completo del estado",
                        "type": "string",
                        "maxLength": 120,
                        "nullable": true
                    },
                    "pc_countrylarge": {
                        "description": "Nombre completo del país",
                        "type": "string",
                        "maxLength": 45,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "Role": {
                "title": "Role",
                "description": "Role model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Administrator"
                    },
                    "slug": {
                        "type": "string",
                        "example": "admin"
                    },
                    "description": {
                        "type": "string",
                        "example": "Full system access"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_system": {
                        "type": "boolean",
                        "example": false
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "StoreConfiguration": {
                "title": "Store Configuration",
                "description": "Store configuration model for managing store-specific settings",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "store_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category": {
                        "type": "string",
                        "example": "tax"
                    },
                    "key_name": {
                        "type": "string",
                        "example": "rate"
                    },
                    "value": {
                        "type": "string",
                        "example": "0.16"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "string",
                            "text",
                            "json",
                            "boolean",
                            "integer",
                            "file",
                            "url"
                        ],
                        "example": "string"
                    },
                    "is_public": {
                        "type": "boolean",
                        "example": false
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "TaxRegime": {
                "title": "Tax Regime",
                "description": "Regímenes fiscales del SAT para México",
                "properties": {
                    "id": {
                        "description": "ID único del régimen fiscal",
                        "type": "integer",
                        "format": "int64"
                    },
                    "sat_code": {
                        "description": "Código del SAT",
                        "type": "integer",
                        "nullable": true
                    },
                    "name": {
                        "description": "Nombre del régimen fiscal",
                        "type": "string",
                        "maxLength": 120,
                        "nullable": true
                    },
                    "relation": {
                        "description": "Relación con otros regímenes",
                        "type": "integer",
                        "nullable": true
                    },
                    "store_id": {
                        "description": "ID de la tienda",
                        "type": "integer",
                        "nullable": true
                    },
                    "active": {
                        "description": "Estado activo/inactivo",
                        "type": "boolean"
                    },
                    "created_at": {
                        "description": "Fecha de creación",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Fecha de actualización",
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "description": "Fecha de eliminación",
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "description": "User model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "first_name": {
                        "type": "string",
                        "example": "John"
                    },
                    "last_name": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "full_name": {
                        "description": "Computed field combining first_name and last_name",
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "+1234567890"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "is_verified": {
                        "type": "boolean",
                        "example": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "deleted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UserActivityLog": {
                "title": "User Activity Log",
                "description": "Registro de actividades realizadas por usuarios",
                "properties": {
                    "id": {
                        "description": "ID único del log",
                        "type": "integer",
                        "format": "int64"
                    },
                    "activity_id": {
                        "description": "ID de la actividad",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "ID del usuario",
                        "type": "integer"
                    },
                    "module": {
                        "description": "Módulo donde se ejecutó",
                        "type": "string",
                        "maxLength": 120,
                        "nullable": true
                    },
                    "title": {
                        "description": "Título descriptivo",
                        "type": "string",
                        "maxLength": 120,
                        "nullable": true
                    },
                    "reference_id": {
                        "description": "ID de referencia",
                        "type": "string",
                        "maxLength": 255,
                        "nullable": true
                    },
                    "metadata": {
                        "description": "Datos adicionales",
                        "type": "object",
                        "nullable": true
                    },
                    "ip_address": {
                        "description": "Dirección IP",
                        "type": "string",
                        "nullable": true
                    },
                    "user_agent": {
                        "description": "User Agent del navegador",
                        "type": "string",
                        "nullable": true
                    },
                    "created_at": {
                        "description": "Fecha de creación",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Fecha de actualización",
                        "type": "string",
                        "format": "date-time"
                    },
                    "activity": {
                        "$ref": "#/components/schemas/Activity"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter JWT Bearer token in format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Activities",
            "description": "Operations related to the activities catalog"
        },
        {
            "name": "Analytics",
            "description": "Analytics and reporting endpoints"
        },
        {
            "name": "Categories",
            "description": "Microsoft product categories management"
        },
        {
            "name": "Products",
            "description": "Product management endpoints"
        },
        {
            "name": "CFDI Usages",
            "description": "Mexican CFDI usage codes management for electronic invoicing"
        },
        {
            "name": "Authentication",
            "description": "API endpoints for user authentication"
        },
        {
            "name": "Billing Information",
            "description": "API Endpoints for Billing Information Management"
        },
        {
            "name": "Cart",
            "description": "Shopping cart management endpoints"
        },
        {
            "name": "Currencies",
            "description": "API Endpoints for Currencies Management"
        },
        {
            "name": "Exchange Rates",
            "description": "API Endpoints for Exchange Rates Management"
        },
        {
            "name": "Health",
            "description": "API health check endpoints"
        },
        {
            "name": "Languages",
            "description": "API Endpoints for Languages Management"
        },
        {
            "name": "Microsoft Accounts",
            "description": "API endpoints for Microsoft Account management"
        },
        {
            "name": "MITEC Payments",
            "description": "API Endpoints for MITEC Payment Gateway - Secure payment processing"
        },
        {
            "name": "Orders",
            "description": "Order management endpoints"
        },
        {
            "name": "Payment Cards",
            "description": "API Endpoints for Payment Cards Management - Secure card storage and management"
        },
        {
            "name": "Permissions",
            "description": "API Endpoints for Permission Management"
        },
        {
            "name": "Postal Codes",
            "description": "API endpoints for postal code management and autocomplete"
        },
        {
            "name": "Roles",
            "description": "API Endpoints for Role Management"
        },
        {
            "name": "Settings",
            "description": "API Endpoints for Global System Settings"
        },
        {
            "name": "Store Configurations",
            "description": "API Endpoints for Store Configurations Management"
        },
        {
            "name": "Stores",
            "description": "API Endpoints for Stores Management"
        },
        {
            "name": "Tax Regimes",
            "description": "CRUD operations for SAT tax regimes"
        },
        {
            "name": "Translations",
            "description": "API Endpoints for Translations Management"
        },
        {
            "name": "User Activity Logs",
            "description": "Operations to record and query user activity logs"
        },
        {
            "name": "Users",
            "description": "API Endpoints for User Management"
        },
        {
            "name": "Order Provisioning",
            "description": "Order Provisioning"
        },
        {
            "name": "Invoices",
            "description": "Invoices"
        }
    ]
}